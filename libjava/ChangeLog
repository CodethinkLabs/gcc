2000-06-15  Tom Tromey  <tromey@cygnus.com>

	* gnu/gcj/convert/natIconv.cc (iconv_adapter): New function.
	(read): Use it.
	(write): Likewise.

2000-06-15  Bryce McKinlay  <bryce@albatross.co.nz>

	Fix for PR java.lang/258:
	* prims.cc (_Jv_PrimClass): Set state of primitive class to 
	JV_STATE_DONE, to prevent accidental initialization.
	* java/lang/natClass.cc (_Jv_IsAssignableFrom): Call 
	_Jv_InterfaceAssignableFrom if target is an interface and source is an
	interface or an abstract class.	Remove redundant initializeClass calls. 
	Remove duplicate if_idt test.
	(_Jv_InterfaceAssignableFrom): New function.
	* java/lang/Class.h (_Jv_InterfaceAssignableFrom): Prototype.

2000-05-31  Tom Tromey  <tromey@cygnus.com>

	* prims.cc (DECLARE_PRIM_TYPE): Define a vtable as well.
	(_Jv_PrimClass): Set `methods' by calling _Jv_FindArrayClass.
	* include/jvm.h (struct _Jv_ArrayVTable): Declare.
	(NUM_OBJECT_METHODS): New define.
	* java/lang/natClassLoader.cc (_Jv_FindArrayClass): Added
	`array_vtable' parameter.  Added assertion.
	* java/lang/Class.h (_Jv_FindArrayClass): Added `array_vtable'
	parameter.

2000-05-31  Bryce McKinlay  <bryce@albatross.co.nz>

	* gcj/cni.h: Include <string.h>.
	* defineclass.cc: Include <alloca.h>.
	* interpret.cc: Ditto.
	* gij.cc: Include <stdlib.h>.

2000-05-30  Tom Tromey  <tromey@cygnus.com>

	* include/name-finder.h: Include <sys/wait.h>.
	(_Jv_name_finder::pid): Now of type `pid_t'.
	(_Jv_name_finder::~_Jv_name_finder): Call waitpid().
	* java/lang/Throwable.java (CPlusPlusDemangler.close): Call
	`proc.waitFor()'.

2000-05-24  Warren Levy  <warrenl@cygnus.com>

	* java/io/ObjectOutputStream.java (writeObject): Use component type
	when writing arrays.
	Fixed typo.

2000-05-20  Bryce McKinlay  <bryce@albatross.co.nz>

	Fix for PR libgcj/226:
	* java/lang/Class.h (_Jv_InitClass): Don't call __builtin_expect,
	since this is an installed header.
	
	Fix for PR libgcj/228:
	* java/util/zip/ZipFile (getInputStream): Create inflater with 
	nowrapper option.
	
	* java/util/zip/natInflater.cc (inflate): Throw zlib's error message
	with DataFormatException.	

2000-05-20  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (hack1): Removed.
	(awto_files): Likewise.
	(libgcjawt_la_SOURCES): Likewise.
	(EXTRA_libgcjawt_la_SOURCES): Likewise.
	(libgcjawt_la_DEPENDENCIES): Likewise.
	(libgcjawt_la_LIBADD): Likewise.
	(libgcjawt_la_LDFLAGS): Likewise.
	(libgcjawt_la_LINK): Likewise.
	($(awt_java_source_files:.java=.class)): Likewise.
	(libgcj.zip): Don't depend on AWT files.
	(MOSTLYCLEANFILES): Don't include AWT files.
	($(awto_files)): Removed.
	(nat_headers): Removed AWT files.
	(cond_awt_java_source_files): Removed.
	(ordinary_java_source_files): Added awt_java_source_files.
	* libgcj.spec.in (*lib): Removed -lgcjawt.
	* configure: Rebuilt.
	* configure.in: Removed --enable-java-awt option.

2000-05-20  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/util/zip/ZipEntry.java: Implement Cloneable, per JDK1.2 docs.
	(ZipEntry): Copy the `name' field.
	(clone): Implement JDK1.2 method.
	(setCompressedSize): ditto.
	(hashCode): ditto.

2000-05-19  Tom Tromey  <tromey@cygnus.com>

	* java/io/BufferedWriter.java: Merged with Classpath.
	* java/io/BufferedOutputStream.java: Merged with Classpath.

2000-05-16  Andrew Haley  <aph@cygnus.com>

	* sysdep/ia64.c (ia64_backtrace_helper): Pass NULL pointer to
	build_ia64_frame_state.
	* sysdep/ia64-frame.h (build_ia64_frame_state): Match with
	defintion in gcc.

2000-05-15  Warren Levy  <warrenl@cygnus.com>

	* gnu/gcj/beans/BeanInfoEmbryo.java: Removed.
	* gnu/gcj/beans/EmptyBeanInfo.java: Removed.
	* gnu/gcj/beans/ExplicitBeanInfo.java: Removed.
	* gnu/gcj/beans/IntrospectionIncubator.java: Removed.
	* gnu/gcj/beans/editors/ColorEditor.java: Removed.
	* gnu/gcj/beans/editors/FontEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeBooleanEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeByteEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeDoubleEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeFloatEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeIntEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeLongEditor.java: Removed.
	* gnu/gcj/beans/editors/NativeShortEditor.java: Removed.
	* gnu/gcj/beans/editors/StringEditor.java: Removed.
	* gnu/gcj/beans/info/ComponentBeanInfo.java: Removed.
	* gnu/gcj/io/ClassLoaderObjectInputStream.java: Removed.
	* gnu/gcj/io/NullOutputStream.java: Removed.
	* gnu/gcj/io/ObjectIdentityWrapper.java: Removed.
	* gnu/gcj/lang/ArrayHelper.java: Removed.
	* gnu/gcj/lang/ClassHelper.java: Removed.
	* gnu/gcj/lang/reflect/TypeSignature.java: Removed.

	* gnu/java/beans/BeanInfoEmbryo.java: New file.
	* gnu/java/beans/EmptyBeanInfo.java: New file.
	* gnu/java/beans/ExplicitBeanInfo.java: New file.
	* gnu/java/beans/IntrospectionIncubator.java: New file.
	* gnu/java/beans/editors/ColorEditor.java: New file.
	* gnu/java/beans/editors/FontEditor.java: New file.
	* gnu/java/beans/editors/NativeBooleanEditor.java: New file.
	* gnu/java/beans/editors/NativeByteEditor.java: New file.
	* gnu/java/beans/editors/NativeDoubleEditor.java: New file.
	* gnu/java/beans/editors/NativeFloatEditor.java: New file.
	* gnu/java/beans/editors/NativeIntEditor.java: New file.
	* gnu/java/beans/editors/NativeLongEditor.java: New file.
	* gnu/java/beans/editors/NativeShortEditor.java: New file.
	* gnu/java/beans/editors/StringEditor.java: New file.
	* gnu/java/beans/info/ComponentBeanInfo.java: New file.
	* gnu/java/io/ClassLoaderObjectInputStream.java: New file.
	* gnu/java/io/NullOutputStream.java: New file.
	* gnu/java/io/ObjectIdentityWrapper.java: New file.
	* gnu/java/lang/ArrayHelper.java: New file.
	* gnu/java/lang/ClassHelper.java: New file.
	* gnu/java/lang/reflect/TypeSignature.java: New file.

	* Makefile.am: Updated for moving Classpath files from gnu/gcj
	namespace back to the original Classpath gnu/java namespace.
	* Makefile.in: Rebuilt.

	* java/beans/Beans.java: Namespace change.
	* java/beans/EventSetDescriptor.java: Namespace change.
	* java/beans/Introspector.java: Namespace change.
	* java/beans/PropertyEditorManager.java: Namespace change.
	* java/io/ObjectInputStream.java: Namespace change.
	* java/io/ObjectOutputStream.java: Namespace change.
	* java/io/ObjectStreamClass.java: Namespace change.
	* java/io/ObjectStreamField.java: Namespace change.

2000-04-21  Warren Levy  <warrenl@cygnus.com>

	* java/io/ObjectInputStream.java: Reverted workarounds of 2000-04-13
	now that compiler patch is available.
	Removed unneeded System.loadLibrary.
	* java/io/ObjectOutputStream.java: Removed unneeded System.loadLibrary.
	* java/io/ObjectStreamClass.java: Removed unneeded System.loadLibrary.

2000-04-19  Andrew Haley  <aph@cygnus.com>

	* java/lang/natClass.cc (_Jv_IsAssignableFrom): Make sure source
	and target classes have been initialized.

2000-04-19  Andrew Haley  <aph@cygnus.com>

	* java/lang/String.java: implement Serializable, Comparable.
	(compareTo (Object)): New method.

2000-04-19  Warren Levy  <warrenl@cygnus.com>

	* java/io/ObjectStreamClass.java (getDefinedSUID): Use getDeclaredField
	instead of getField to retrieve non-public field.
	(getSerialPersistantFields): Ditto.

2000-04-18  Warren Levy  <warrenl@cygnus.com>

	* mauve-libgcj: Turned off object serialization tests temporarily
	due to compiler error.

2000-04-17  Warren Levy  <warrenl@cygnus.com>

	* java/io/ObjectInputStream.java (DEBUG): Disabled unused method
	to avoid build problem.
	(DEBUGln): Ditto.
	* mauve-libgcj: Turned on object serialization tests.

2000-04-17  Tom Tromey  <tromey@cygnus.com>

	* libgcj.spec.in (*lib): Added -lgcjawt.

2000-04-17  Andrew Haley  <aph@cygnus.com>

	* Makefile.am: Add new files: 
	gnu/gcj/io/SimpleSHSStream.java, gnu/gcj/io/natSimpleSHSStream.cc,
	gnu/gcj/io/shs.cc.
	* Makefile.in: Rebuilt.

	* java/lang/natClass.cc (_Jv_IsAssignableFrom): Check for an
	interface that has no implementations.
	Check for an attempt to assign an abstract class to an interface.

	* java/io/ObjectStreamClass.java (setUID): Use a SimpleSHSStream
	if we fail to find MessageDigest.getInstance ("SHA").

	* gnu/gcj/io/SimpleSHSStream.java: New file.
	* gnu/gcj/io/natSimpleSHSStream.java: New file.
	* gnu/gcj/io/shs.cc: New file.
	* gnu/gcj/io/shs.h: new file.

	* java/lang/natClassLoader.cc (_Jv_FindArrayClass): Make arrays
	serializable.

	* gnu/gcj/lang/reflect/TypeSignature.java: Don't remove
	punctuation from the classname of an array element.

	* gcj/javaprims.h: Add SimpleDigestStream.
	
2000-04-17  Andrew Haley  <aph@cygnus.com>

	* java/lang/natClass.cc (getPrivateField): Make recursive calls
	to getPrivateField for superclasses.
 
2000-04-14  Andrew Haley  <aph@cygnus.com>

	* Makefile.am: Add new files:
	java/io/ObjectOutputStream$PutField.h,
	java/io/ObjectInputStream$GetField.h,java/io/natObjectInputStream.cc,
	java/io/natObjectOutputStream.cc
	* Makefile.in: Rebuilt.
	* gcj/Makefile.in: Rebuilt.
	* include/Makefile.in: Rebuilt.
	* java/lang/Class.h (getPrivateField): New method.
	(getPrivateMethod): Ditto.
	Make java::io::ObjectOutputStream, java::io::ObjectInputStream,
	and java::io::ObjectStreamClass our friends.
	* java/lang/natClass.cc (getPrivateField): New method.
	(getPrivateMethod): Ditto.
	(_Jv_IsAssignableFrom): Return false for Interface with no IDT.
	* gcj/javaprims.h: Add serialization classes.	
	* java/io/ObjectInputStream.java (setBooleanField): Rewrite in Java.
	(setByteField): Ditto.
	(setCharField): Ditto.
	(setDoubleField): Ditto.
	(setFloatField): Ditto.
	(setIntField): Ditto.
	(setLongField): Ditto.
	(setShortField): Ditto.
	(setObjectField): Ditto.
	* java/io/ObjectOutputStream.java: (getBooleanField): Rewrite in
	Java.
	(getByteField): Ditto.
	(getCharField): Ditto.
	(getDoubleField): Ditto.
	(getFloatField): Ditto.
	(getIntField): Ditto.
	(getLongField): Ditto.
	(getShortField): Ditto.
	(getObjectField): Ditto.
	* java/io/ObjectStreamClass.java (hasClassInitializer): Rewrite in
	Java.
	(getSerialPersistantFields): Ditto.
	(getDefinedSUID): Ditto.
	* java/io/natObjectOutputStream.cc: New file.
	* java/io/natObjectInputStream.cc: New file.
	
2000-04-13  Warren Levy  <warrenl@cygnus.com>

	* java/io/ObjectInputStream.java: Temporary workarounds for compiler
	problems.  Revert to previous version to reproduce and when fixed.

2000-04-13  Warren Levy  <warrenl@cygnus.com>

	* gnu/gcj/io/ClassLoaderObjectInputStream.java: New file.
	* gnu/gcj/io/NullOutputStream.java: New file.
	* gnu/gcj/lang/reflect/TypeSignature.java: New file.
	* java/io/BlockDataException.java: New file.
	* java/io/Externalizable.java: New file.
	* java/io/InvalidClassException.java: New file.
	* java/io/InvalidObjectException.java: New file.
	* java/io/NotActiveException.java: New file.
	* java/io/NotSerializableException.java: New file.
	* java/io/ObjectInput.java: New file.
	* java/io/ObjectInputStream.java: New file.
	* java/io/ObjectInputValidation.java: New file.
	* java/io/ObjectOutput.java: New file.
	* java/io/ObjectOutputStream.java: New file.
	* java/io/ObjectStreamClass.java: New file.
	* java/io/ObjectStreamConstants.java: New file.
	* java/io/ObjectStreamField.java: New file.
	* java/io/Replaceable.java: New file.
	* java/io/Resolvable.java: New file.
	* java/io/SerializablePermission.java: New file.
	* java/io/WriteAbortedException.java: New file.
	* java/security/BasicPermission.java: New file.
	* java/security/DigestOutputStream.java: New file.
	* java/security/Guard.java: New file.
	* java/security/Permission.java: New file.
	* java/security/PermissionCollection.java: New file.
	* Makefile.am: Added above files.
	* Makefile.in: Rebuilt.

	* java/beans/Beans.java (instantiate): Activated serialization code.
	* java/lang/SecurityManager.java (checkPermission): New method.

2000-04-12  Warren Levy  <warrenl@cygnus.com>

	* gnu/gcj/beans/BeanInfoEmbryo.java: New file.
	* gnu/gcj/beans/EmptyBeanInfo.java: New file.
	* gnu/gcj/beans/ExplicitBeanInfo.java: New file.
	* gnu/gcj/beans/IntrospectionIncubator.java: New file.
	* gnu/gcj/beans/editors/ColorEditor.java: New file.
	* gnu/gcj/beans/editors/FontEditor.java: New file.
	* gnu/gcj/beans/editors/NativeBooleanEditor.java: New file.
	* gnu/gcj/beans/editors/NativeByteEditor.java: New file.
	* gnu/gcj/beans/editors/NativeDoubleEditor.java: New file.
	* gnu/gcj/beans/editors/NativeFloatEditor.java: New file.
	* gnu/gcj/beans/editors/NativeIntEditor.java: New file.
	* gnu/gcj/beans/editors/NativeLongEditor.java: New file.
	* gnu/gcj/beans/editors/NativeShortEditor.java: New file.
	* gnu/gcj/beans/editors/StringEditor.java: New file.
	* gnu/gcj/beans/info/ComponentBeanInfo.java: New file.
	* gnu/gcj/io/ObjectIdentityWrapper.java: New file.
	* gnu/gcj/lang/ArrayHelper.java: New file.
	* gnu/gcj/lang/ClassHelper.java: New file.
	* java/beans/BeanDescriptor.java: New file.
	* java/beans/BeanInfo.java: New file.
	* java/beans/Beans.java: New file.
	* java/beans/Customizer.java: New file.
	* java/beans/DesignMode.java: New file.
	* java/beans/EventSetDescriptor.java: New file.
	* java/beans/FeatureDescriptor.java: New file.
	* java/beans/IndexedPropertyDescriptor.java: New file.
	* java/beans/IntrospectionException.java: New file.
	* java/beans/Introspector.java: New file.
	* java/beans/MethodDescriptor.java: New file.
	* java/beans/ParameterDescriptor.java: New file.
	* java/beans/PropertyChangeEvent.java: New file.
	* java/beans/PropertyChangeListener.java: New file.
	* java/beans/PropertyChangeSupport.java: New file.
	* java/beans/PropertyDescriptor.java: New file.
	* java/beans/PropertyEditor.java: New file.
	* java/beans/PropertyEditorManager.java: New file.
	* java/beans/PropertyEditorSupport.java: New file.
	* java/beans/PropertyVetoException.java: New file.
	* java/beans/SimpleBeanInfo.java: New file.
	* java/beans/VetoableChangeListener.java: New file.
	* java/beans/VetoableChangeSupport.java: New file.
	* java/beans/Visibility.java: New file.
	* java/beans/beancontext/BeanContext.java: New file.
	* java/beans/beancontext/BeanContextChild.java: New file.
	* java/beans/beancontext/BeanContextChildComponentProxy.java: New file.
	* java/beans/beancontext/BeanContextChildSupport.java: New file.
	* java/beans/beancontext/BeanContextContainerProxy.java: New file.
	* java/beans/beancontext/BeanContextEvent.java: New file.
	* java/beans/beancontext/BeanContextMembershipEvent.java: New file.
	* java/beans/beancontext/BeanContextMembershipListener.java: New file.
	* java/beans/beancontext/BeanContextProxy.java: New file.
	* java/beans/beancontext/BeanContextServiceAvailableEvent.java:
	New file.
	* java/beans/beancontext/BeanContextServiceProvider.java: New file.
	* java/beans/beancontext/BeanContextServiceProviderBeanInfo.java:
	New file.
	* java/beans/beancontext/BeanContextServiceRevokedEvent.java: New file.
	* java/beans/beancontext/BeanContextServiceRevokedListener.java:
	New file.
	* java/beans/beancontext/BeanContextServices.java: New file.
	* java/beans/beancontext/BeanContextServicesListener.java: New file.
	* java/util/AbstractCollection.java: New file.
	* java/util/AbstractList.java: New file.
	* java/util/Arrays.java: New file.
	* Makefile.am: Added above files.
	* Makefile.in: Rebuilt.

2000-04-11  Warren Levy  <warrenl@cygnus.com>

	* java/awt/AWTError.java: New file.
	* java/awt/AWTEvent.java: New file.
	* java/awt/AWTException.java: New file.
	* java/awt/ActiveEvent.java: New file.
	* java/awt/Adjustable.java: New file.
	* java/awt/BorderLayout.java: New file.
	* java/awt/Color.java: New file.
	* java/awt/Component.java: New file.
	* java/awt/Container.java: New file.
	* java/awt/Dimension.java: New file.
	* java/awt/Event.java: New file.
	* java/awt/Font.java: New file.
	* java/awt/Frame.java: New file.
	* java/awt/Graphics.java: New file.
	* java/awt/IllegalComponentStateException.java: New file.
	* java/awt/Image.java: New file.
	* java/awt/ItemSelectable.java: New file.
	* java/awt/LayoutManager.java: New file.
	* java/awt/LayoutManager2.java: New file.
	* java/awt/Menu.java: New file.
	* java/awt/MenuBar.java: New file.
	* java/awt/MenuComponent.java: New file.
	* java/awt/MenuContainer.java: New file.
	* java/awt/MenuItem.java: New file.
	* java/awt/Paint.java: New file.
	* java/awt/PaintContext.java: New file.
	* java/awt/Point.java: New file.
	* java/awt/Rectangle.java: New file.
	* java/awt/Shape.java: New file.
	* java/awt/TextArea.java: New file.
	* java/awt/TextComponent.java: New file.
	* java/awt/Toolkit.java: New file.
	* java/awt/Transparency.java: New file.
	* java/awt/Window.java: New file.
	* java/awt/natToolkit.cc: New file.
	* java/awt/event/AWTEventListener.java: New file.
	* java/awt/event/ActionEvent.java: New file.
	* java/awt/event/ActionListener.java: New file.
	* java/awt/event/AdjustmentEvent.java: New file.
	* java/awt/event/AdjustmentListener.java: New file.
	* java/awt/event/ComponentAdapter.java: New file.
	* java/awt/event/ComponentEvent.java: New file.
	* java/awt/event/ComponentListener.java: New file.
	* java/awt/event/ContainerAdapter.java: New file.
	* java/awt/event/ContainerEvent.java: New file.
	* java/awt/event/ContainerListener.java: New file.
	* java/awt/event/FocusAdapter.java: New file.
	* java/awt/event/FocusEvent.java: New file.
	* java/awt/event/FocusListener.java: New file.
	* java/awt/event/InputEvent.java: New file.
	* java/awt/event/InputMethodEvent.java: New file.
	* java/awt/event/InputMethodListener.java: New file.
	* java/awt/event/InvocationEvent.java: New file.
	* java/awt/event/ItemEvent.java: New file.
	* java/awt/event/ItemListener.java: New file.
	* java/awt/event/KeyAdapter.java: New file.
	* java/awt/event/KeyEvent.java: New file.
	* java/awt/event/KeyListener.java: New file.
	* java/awt/event/MouseAdapter.java: New file.
	* java/awt/event/MouseEvent.java: New file.
	* java/awt/event/MouseListener.java: New file.
	* java/awt/event/MouseMotionAdapter.java: New file.
	* java/awt/event/MouseMotionListener.java: New file.
	* java/awt/event/PaintEvent.java: New file.
	* java/awt/event/TextEvent.java: New file.
	* java/awt/event/TextListener.java: New file.
	* java/awt/event/WindowAdapter.java: New file.
	* java/awt/event/WindowEvent.java: New file.
	* java/awt/event/WindowListener.java: New file.
	* java/awt/geom/Dimension2D.java: New file.
	* java/awt/geom/Point2D.java: New file.
	* java/awt/peer/ComponentPeer.java: New file.
	* java/awt/peer/ContainerPeer.java: New file.
	* java/awt/peer/FramePeer.java: New file.
	* java/awt/peer/WindowPeer.java: New file.
	* java/util/Collection.java: New file.
	* java/util/Comparator.java: New file.
	* java/util/Iterator.java: New file.
	* java/util/List.java: New file.
	* java/util/ListIterator.java: New file.
	* Makefile.am: Added above files.
	* Makefile.in: Rebuilt.

2000-04-10  Warren Levy  <warrenl@cygnus.com>

	* gnu/gcj/runtime/MethodInvocation.java: Fixed copyright.
	* java/lang/FirstThread.java: Ditto.
	* java/lang/StringBuffer.java: Ditto.
	* mauve-libgcj: Turned on java.math, java.sql and java.security tests.

	* gnu/gcj/math/MPN.java (rshift): Undid Boehm's patch of 03-14.
	Special case handled in java.math.BigInteger.
	* java/math/BigInteger.java (divide): Handle the special case when
	dividing by 1 and the high bit of the dividend is set.
	(setShiftRight): Handle case when count == 0.

2000-04-05  Andrew Haley  <aph@cygnus.com>

	* java/net/URL.java (setURLStreamHandler): Make "file" protocol a
	special case.

2000-04-05  Andrew Haley  <aph@cygnus.com>

	* sysdep/ia64.c (rse_address_add): Delete.
	(IS_NaT_COLLECTION_ADDR): Delete.
	(ia64_backtrace_helper): check for null unwind_info.
	
	* sysdep/ia64-frame.h: add calc_caller_bsp.

	* java/lang/natThrowable.cc (printRawStackTrace): Flush
	PrintWriter.

	* prims.cc (_Jv_divI): Use _Jv_ThrowSignal.
	(_Jv_remI): Likewise.
	(_Jv_divJ): Likewise.
	(_Jv_remJ): Likewise.
	
	* interpret.cc (continue1): Use divide subroutines to guarantee
	correct Java standard behaviour.
	Floating-point division should not abort; make it so.

2000-03-29  Tom Tromey  <tromey@cygnus.com>

	* configure: Rebuilt.
	* configure.in: Test against `libgcj_sjlj', not
	`enable_sjlj_exceptions'.  Rearranged code to allow SYSDEP_SOURCES
	to be set even when using sjlj.

2000-03-24  Andrew Haley  <aph@cygnus.com>

	* Makefile.am: Add file addr2name.awk.
	* Makefile.in: Rebuilt.
	* addr2name.awk: New file.
	* name-finder.cc (_Jv_name_finder): Call addr2name.awk to do name
	lookups on ia64.
	* java/lang/natThrowable.cc(printRawStackTrace): Don't print out a
	blank line.
	
2000-03-22  Andrew Haley  <aph@cygnus.com>

	* configure.host: Add -funwind-tables for IA64.
	* Makefile.am (c_source_files): Add SYSDEP_SORCES.
	* Makefile.in: Rebuilt.
	* java/lang/natThrowable.cc (fillInStackTrace): Add ia64 case.
	* sysdep/ia64.c: New file.
	* sysdep/ia64-frame.h: New file.
	* configure.in: Add sysdep/ia64.c for ia64.
	* configure: Rebuilt.
	
2000-03-17  Andrew Haley  <aph@cygnus.com>

	* java/lang/natString.cc: Remove `register' keyword.
	interpret.cc: ditto.

2000-03-16  Andrew Haley  <aph@cygnus.com>

	* configure.host (ia64): Enable interpreter.

2000-03-14  Hans Boehm  <boehm@acm.org>

	* gnu/gcj/math/MPN.java (rshift): Handle shift 32 specially.

2000-03-14  Andrew Haley  <aph@cygnus.com>

	* include/default-signal.h (MAKE_THROW_FRAME): Add arg
	`_exception'.

2000-03-10  Andrew Haley  <aph@cygnus.com>

	* java/lang/ieeefp.h: Import latest version from fdlibm.

2000-03-14  Andrew Haley  <aph@cygnus.com>

	* prims.cc (_Jv_ThrowSignal): New function.
	(catch_segv): Add arg `_exception' to MAKE_THROW_FRAME.
	(catch_fpe): Ditto.
	* include/sparc-signal.h (MAKE_THROW_FRAME): Ditto
	* include/i386-signal.h (MAKE_THROW_FRAME): Ditto.
	* include/ppc-signal.h: New file.

2000-05-18  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/lang/Thread.java: Declare `data' as Object, not RawData.
	* java/lang/natThread.java (initialize_native): Cast `data' to
	jobject.
	* gnu/gcj/RawData.java: Clarify documentation.

	From Gregory R. Warnes <warnes@biostat.washington.edu>:
	* gnu/gcj/protocol/jar/Connection.java (getJarFile): Test for null
	`jarFile', not `jarFileURL'.

2000-05-15  Andrew Haley  <aph@cygnus.com>

	* include/ppc-signal.h: New file.

2000-05-11  Tom Tromey  <tromey@cygnus.com>

	* java/util/zip/ZipInputStream.java (getNextEntry): When reading
	file headers, don't include `size' in the skip call.

2000-05-10  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/lang/StringBuffer.java (delete): Call arrayCopy() correctly.
	Avoid arrayCopy() call where possible. Update `count' _after_ calling
	arrayCopy().
	(replace): Reimplemented. Fix javadoc.
	(reverse): Call ensureCapacity_unsynchronized().
	(StringBuffer (String)): Use DEFAULT_CAPACITY.

	(replace): Calculate length for arraycopy() correctly.
	
2000-05-09  Tom Tromey  <tromey@cygnus.com>

	* java/lang/StringBuffer.java (toString): Don't mark buffer as
	shared.
	(insert(int,char[],int,int): New method.
	(delete): New method from Classpath.
	(deleteCharAt): Likewise.
	(substring): Likewise.
	(shared): No longer private.
	Added JavaDoc comments from Classpath.
	* java/lang/String.java (String(StringBuffer)): Ensure `buffer' is
	shared.

2000-05-07  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (LIBLINK): New macro.
	(libgcj_la_LINK): Use it.
	(libgcjawt_la_LINK): Likewise.

2000-05-06  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (libgcj.zip): Don't pass -L to javac.

2000-05-05  Tom Tromey  <tromey@cygnus.com>

	Fix for PR libgcj/220:
	* Makefile.in: Rebuilt.
	* Makefile.am (gij_LDFLAGS): Don't use libstdc++.
	(jv_convert_LDFLAGS): Likewise.
	(libgcj_la_LDFLAGS): Likewise.
	(GCJLINK): New macro.
	(jv_convert_LINK): Use it.
	(gij_LINK): Likewise.
	(libgcj_la_LINK): New macro.
	(libgcjawt_la_LINK): Likewise.

2000-05-04  Tom Tromey  <tromey@cygnus.com>

	* gcj/field.h (JvFieldIsRef): Return false for gnu.gcj.RawData
	field.
	* boehm.cc (_Jv_MarkObj): Removed dead code.  Use `STATIC', not
	`0x0008'.
	Include Modifier.h.

2000-05-05  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/lang/natClass.cc (isInstance): Use __builtin_expect.
	(_Jv_IsAssignableFrom): Ditto.
	(_Jv_IsInstanceOf): Ditto.
	(_Jv_CheckCast): Ditto.
	(_Jv_CheckArrayStore): Ditto.
	* java/lang/Class.h (_Jv_InitClass): Ditto.	
	* java/lang/natObject.cc (_Jv_MonitorEnter): __builtin_expect `false',
	not `0'.
	(notify): Ditto.
	(notifyAll): Ditto.
	(wait): Ditto.
	(_Jv_MonitorExit): Ditto.
	* boehm.cc (_Jv_MarkObj): Ditto.
	(_Jv_MarkObj): Ditto.
	(_Jv_MarkArray): Ditto.
	* prims.cc (_Jv_AllocObject): Ditto.
	(_Jv_NewObjectArray): Ditto.
	(_Jv_NewPrimArray): Ditto.
	(_Jv_Malloc): Ditto.
	(_Jv_Realloc): Ditto.
	(_Jv_MallocUnchecked): Ditto.
	(_Jv_divI): Ditto.
	(_Jv_remI): Ditto.
	(_Jv_divJ): Ditto.
	(_Jv_remJ): Ditto.

2000-05-04  Tom Tromey  <tromey@cygnus.com>

	* java/util/Locale.java (Locale): Don't explicitly check for
	null.
	* java/util/Hashtable.java (containsKey): Don't explicitly check
	for null.
	(get): Likewise.
	* java/util/BitSet.java (and, or, xor): Don't explicitly check for
	null.
	* java/util/zip/ZipEntry.java (ZipEntry): Don't explicitly check
	for null.
	* java/text/StringCharacterIterator.java
	(StringCharacterIterator): Don't check for null.
	* java/text/ChoiceFormat.java (setChoices): Don't explicitly check
	for null pointer.
	* java/net/MulticastSocket.java (joinGroup): Don't explicitly
	check for null pointer.
	(leaveGroup): Likewise.
	* java/net/DatagramPacket.java (DatagramPacket): Removed erroneous
	comment.
	(setData): Likewise.
	* java/lang/ThreadGroup.java (ThreadGroup): Don't explicitly check
	for `p==null'.

2000-04-28  Jakub Jelinek  <jakub@redhat.com>

	* Makefile.am (GCJCOMPILE, JCFLAGS, JF1CLAGS, jv_convert_LINK,
	gij_LINK, libgcj.zip, .java=.class): Move -L option out of FLAGS.
	(libgcj_la_LDFLAGS): Add -L../libstdc++ for in-gcc builds.
	(jv_convert_LDFLAGS, gij_LDFLAGS): Add `pwd`/../libstdc++ to
	-rpath for in-gcc builds.
	* Makefile.in: Rebuilt.

2000-04-28  Tom Tromey  <tromey@cygnus.com>

	* libgcj.spec.in (*jc1): Added -fasynchronous-exceptions.
	Fix for PR gcj/218.

2000-04-28  Bryce McKinlay  <bryce@albatross.co.nz>

	* libjava/java/lang/String.java (toString): Remove `final' hack.

2000-04-05  Tom Tromey  <tromey@cygnus.com>

	Runtime support for PR gcj/2:
	* prims.cc (_Jv_ThrowNullPointerException): New function.
	* include/jvm.h (_Jv_ThrowNullPointerException): Declare.

2000-04-27  Bryce McKinlay  <bryce@albatross.co.nz>

	* prims.cc (_Jv_NewObjectArray): Fix typo.

2000-04-26  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (AM_CXXFLAGS): Added -fasynchronous-exceptions.

2000-04-24  Jeff Sturm  <jsturm@sigma6.com>

	* gnu/gcj/runtime/natFirstThread.cc (run): Initialize class before
	calling main.

2000-04-22  Anthony Green  <green@cygnus.com>

	* include/jvm.h (__builtin_expect): Define as unused for now.
	* java/lang/natObject.cc (_Jv_MonitorEnter): Add __builtin_expect.
	(notify): Ditto.
	(notifyAll): Ditto.
	(wait): Ditto.
	(_Jv_MonitorExit): Ditto.
	* boehm.cc (_Jv_MarkObj): Ditto.
	(_Jv_MarkObj): Ditto.
	(_Jv_MarkArray): Ditto.
	(_Jv_AllocBytes): Ditto.
	* prims.cc (_Jv_AllocObject): Ditto.
	(_Jv_NewObjectArray): Ditto.
	(_Jv_NewPrimArray): Ditto.
	(_Jv_Malloc): Ditto.
	(_Jv_Realloc): Ditto.
	(_Jv_MallocUnchecked): Ditto.
	(_Jv_divI): Ditto.
	(_Jv_remI): Ditto.
	(_Jv_divJ): Ditto.
	(_Jv_remJ): Ditto.

	* include/Makefile.in: Rebuilt.
	* include/Makefile.am (include_HEADERS): Add jvmpi.h.

2000-04-21  Tom Tromey  <tromey@cygnus.com>

	* java/io/PipedInputStream.java, java/io/PipedOutputStream.java:
	Yet another new version from Classpath.

	Fix for PR libgcj/15:
	* java/util/natGregorianCalendar.cc (_REENTRANT,
	_POSIX_PTHREAD_SEMANTICS): Don't define.
	* java/net/natInetAddress.cc (_REENTRANT): Don't define.
	* java/lang/natSystem.cc (_REENTRANT, _POSIX_PTHREAD_SEMANTICS):
	Don't define.
	* java/io/natFile.cc (_REENTRANT, _POSIX_PTHREAD_SEMANTICS): Don't
	define.
	* configure: Rebuilt.
	* configure.in: If using POSIX threads, define _REENTRANT if
	needed.  Define _POSIX_PTHREAD_SEMANTICS.  Don't define
	GETHOSTBYNAME_R_NEEDS_REENTRANT.

	* java/io/PipedInputStream.java, java/io/PipedReader.java,
	java/io/PipedOutputStream.java, java/io/PipedWriter.java: New
	version from Classpath.

	Fix for PR libgcj/213:
	* Makefile.in: Rebuilt.
	* Makefile.am (gij_SOURCES): Added gij.cc.
	(EXTRA_gij_SOURCES): Removed.
	(gij_LDADD): Removed gij.lo.
	(gij_DEPENDENCIES): Likewise.
	($(gij_OBJECTS)): Depend on nat_headers.

	* gnu/gcj/protocol/file/Handler.java (openConnection): Use
	`setURL', not `url.set'.

2000-04-20  Tom Tromey  <tromey@cygnus.com>

	Fix for PR java.io/204:
	* java/io/PipedInputStream.java, java/io/PipedReader.java,
	java/io/PipedOutputStream.java, java/io/PipedWriter.java: Imported
	from Classpath.

	Fix for PR libgcj/212:
	* gcj/javaprims.h (_Jv_word, _Jv_word2): Removed definitions.
	* include/jvm.h (_Jv_word, _Jv_word2): Define.
	* java/lang/Class.h (_Jv_word): Declare.

	* jni.cc (_Jv_JNI_PopSystemFrame): Clear `env->ex'.

2000-04-19  Tom Tromey  <tromey@cygnus.com>

	* jni.cc (_Jv_JNI_FindClass): Use system class loader if class
	doesn't have a loader.

2000-04-19  Bryce McKinlay  <bryce@albatross.co.nz>

	* boehm.cc: (_Jv_MarkObj, _Jv_MarkArray): Cast pointers for
	MAYBE_MARK to ptr_t, for compatibility with new GC version.

2000-04-16  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/io/natFileDescriptorPosix.cc (open): Use mode 0666. Fix for PR
	libgcj/202.
	(available): Initialize `where' to prevent bogus compiler warning.

2000-04-12  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natString.cc (intern): Temporarily disable finalizer
	registration.

	* java/lang/natString.cc (unintern): Added `obj' argument.
	(intern): Register finalizer for string.
	* java/lang/String.java (unintern): Now static; added obj
	argument.

2000-04-11  Tom Tromey  <tromey@cygnus.com>

	* java/util/Vector.java (VectorEnumeration): Now `final'.
	* java/util/Hashtable.java (HashtableEntry): Now `final'.
	(HashtableEnumeration): Likewise.
	* java/util/zip/ZipFile.java (ZipEnumeration): Now `final'.
	* java/text/RuleBasedCollator.java (RBCElement): Now `final'.

2000-04-10  Warren Levy  <warrenl@cygnus.com>

	* java/io/ObjectStreamException.java: New file.
	* java/io/OptionalDataException.java: New file.
	* java/io/StreamCorruptedException.java: New file.
	* java/math/BigDecimal.java: New file.
	* java/sql/CallableStatement.java: New file.
	* java/sql/Connection.java: New file.
	* java/sql/DataTruncation.java: New file.
	* java/sql/DatabaseMetaData.java: New file.
	* java/sql/Date.java: New file.
	* java/sql/Driver.java: New file.
	* java/sql/DriverManager.java: New file.
	* java/sql/DriverPropertyInfo.java: New file.
	* java/sql/PreparedStatement.java: New file.
	* java/sql/ResultSet.java: New file.
	* java/sql/ResultSetMetaData.java: New file.
	* java/sql/SQLException.java: New file.
	* java/sql/SQLWarning.java: New file.
	* java/sql/Statement.java: New file.
	* java/sql/Time.java: New file.
	* java/sql/Timestamp.java: New file.
	* java/sql/Types.java: New file.
	* Makefile.am: Added above new files.
	* Makefile.in: Rebuilt.

	* mauve-libgcj: Turned on java.math, java.sql and java.security tests.
	* java/net/MulticastSocket.java (MulticastSocket): Pass values a la
	DatagramSocket constructor instead of null.

2000-04-08  Anthony Green  <green@cygnus.com>

	* include/posix-threads.h (_Jv_MutexUnlock): Replace
	_JV_NOT_OWNER.
	
2000-04-08  Anthony Green  <green@cygnus.com>

	* posix-threads.cc (_Jv_MutexLock): Moved back to posix-threads.h.
	(_Jv_MutexUnlock): Ditto.
	* include/posix-threads.h (_Jv_MutexLock): From posix-threads.cc.
	(_Jv_MutexUnlock): Ditto.

2000-04-08  Anthony Green  <green@cygnus.com>

	* java/lang/StringBuffer.java (ensureCapacity): Don't call Math::max.
	(ensureCapacity_unsynchronized): New private method.
	(append): Use ensureCapacity_unsynchronized.

2000-04-08  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (awt_java_source_files): Added new files.
	* java/awt/IllegalComponentStateException.java: New file.
	* java/awt/ItemSelectable.java: New file.
	* java/awt/event/WindowEvent.java: Finished.
	* java/awt/event/TextEvent.java: Finished.
	* java/awt/event/ContainerEvent.java: New file.
	* java/awt/Component.java (getX, getY): New methods.
	* java/awt/event/PaintEvent.java: New file.
	* java/awt/event/MouseEvent.java: New file.
	* java/awt/ActiveEvent.java: New file.
	* java/awt/event/KeyEvent.java: Finished.
	* java/awt/event/ItemEvent.java: New file.
	* java/awt/Adjustable.java: New file.
	* java/awt/event/InputMethodEvent.java: New file.
	* java/awt/event/InputEvent.java: Finished.
	* java/awt/event/FocusEvent.java: New file.
	* java/awt/event/MouseMotionAdapter.java: New file.
	* java/awt/event/MouseAdapter.java: New file.
	* java/awt/event/KeyAdapter.java: New file.
	* java/awt/event/FocusAdapter.java: New file.
	* java/awt/event/ContainerAdapter.java: New file.
	* java/awt/event/ComponentEvent.java: Finished.
	* java/awt/event/AdjustmentEvent.java: New file.
	* java/awt/event/ComponentAdapter.java: New file.
	* java/awt/event/ActionEvent.java: Finished.
	* java/awt/event/MouseMotionListener.java: New file.
	* java/awt/event/MouseListener.java: New file.
	* java/awt/event/ItemListener.java: New file.
	* java/awt/event/InputMethodListener.java: New file.
	* java/awt/event/ContainerListener.java: New file.
	* java/awt/event/FocusListener.java: New file.
	* java/awt/event/ComponentListener.java: New file.
	* java/awt/event/AWTEventListener.java: New file.
	* java/awt/event/AdjustmentListener.java: New file.

2000-04-08  Anthony Green  <green@cygnus.com>

	* java/lang/natObject.cc (_Jv_MonitorEnter): Only perform null
	check when we have to.

	* gcj/array.h: Mark elements(JArray<T>& x) and elements(JArray<T>*
	x) as `inline'.

	* java/util/StringTokenizer.java: Minor optimization.  Eliminates
	one method call.

	* java/util/Vector.java (VectorEnumeration.nextElement): Manually
	inline hasMoreElements.

2000-04-05  Tom Tromey  <tromey@cygnus.com>

	* configure: Rebuilt.
	* configure.in: Recognize --enable-java-awt.
	(AWT): New conditional.
	* Makefile.in: Rebuilt.
	* Makefile.am (toolexeclib_LTLIBRARIES): Build libgcjawt.la if
	requested.
	(libgcjawt_la_SOURCES): New macro.
	(EXTRA_libgcjawt_la_SOURCES): Likewise.
	(libgcjawt_la_DEPENDENCIES): Likewise.
	(libgcjawt_la_LIBADD): Likewise.
	(libgcjawt_la_LDFLAGS): Likewise.
	(libgcj.zip): Depend on cond_java_awt_source_files
	(cond_awt_java_source_files): New macro.
	(MOSTLYCLEANFILES): Added awto_files.
	(awto_files): New macro.  Use where javao_files used.
	(nat_headers): Use cond_awt_java_source_files.

2000-04-04  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (awt_java_source_files): Added AWTException.java.
	* java/awt/AWTException.java: New file.

2000-04-03  Tom Tromey  <tromey@cygnus.com>

	* include/jvm.h (_Jv_GetArrayElementFromElementType): More
	commentary from Alex.

	* Makefile.in: Rebuilt.
	* Makefile.am ($(javao_files)): Depend on libgcj.zip.
	From H.J. Lu.

Sun Apr  2 08:27:18 2000  Anthony Green  <green@redhat.com>

	* configure: Rebuilt.
	* configure.in: Add --disable-jvmpi.
	* include/config.h.in: Rebuilt.
	* acconfig.h: Add ENABLE_JVMPI.
	 
	* include/jvm.h: Declare _Jv_DisableGC and _Jv_EnableGC.
	(_Jv_JVMPI_Notify_OBJECT_ALLOC): New define.
	(_Jv_JVMPI_Notify_THREAD_END): New define.
	(_Jv_JVMPI_Notify_THREAD_END): New define.
	* prims.cc (_Jv_JVMPI_Notify_OBJECT_ALLOC): Declare.
	(_Jv_JVMPI_Notify_THREAD_END): Declare.
	(_Jv_JVMPI_Notify_THREAD_END): Declare.

	* prims.cc (_Jv_AllocObject): Generate JVMPI object allocation
	events.

	* java/lang/natThread.cc: Include JVMPI headers if necessary.
	(finish_): Generate JVMPI thread end events.
	(run_): Generate JVMPI thread start events.
	* gnu/gcj/runtime/natFirstThread.cc (run): Call JNI_OnLoad for any
	preloaded JNI library.
	Include JVMPI headers if necessary.
	(run): Generate JVMPI thread start events.

	* boehm.cc: Define GC_disable and GC_enable.
	(_Jv_DisableGC): New function.
	(_Jv_EnableGC): New function.
	(disable_gc_mutex): Declare.
	* nogc.cc (_Jv_DisableGC): New function.
	(_Jv_EnableGC): New function.
	  
	* jni.cc (_Jv_JNI_GetEnv): Handle JVMPI interface requests.
	(_Jv_JVMPI_Interface): Define.
	(jvmpiEnableEvent): New function.
	(_Jv_JNI_Init): Initialize _Jv_JVMPI_Interface.
	  
	* include/jvmpi.h: New file.

2000-03-27  Bryce McKinlay  <bryce@albatross.co.nz>

	* Makefile.in: New #defines and friends for Thread.h.
	* Makefile.am: Ditto.
	* posix-threads.cc: (struct starter): Remove `object'.
	(_Jv_CondWait): Use interruptable condition variables and new
	recursive mutexes. New return codes on interrupt or non-ownership
	of mutex.
	(_Jv_CondNotify): Ditto.
	(_Jv_CondNotifyAll): Ditto.
	(_Jv_ThreadInterrupt): Set thread interrupt flag directly. Interrupt
	the target thread by signaling its wait condition.
	(_Jv_ThreadInitData): Set `thread_obj' in the thread data struct,
	not the starter struct. Initialize wait_mutex and wait_cond.
	(_Jv_MutexLock): New recursive mutex implementation. Moved from 
	posix-threads.h.
	(_Jv_MutexUnlock): Ditto.
	(really_start): Set info->data->thread from pthread_self() to work 
	around a race condition. Destroy wait_mutex and wait_cond when run()
	returns.
	* java/lang/Thread.java: (isInterrupted_): Renamed to overloaded
	`isInterrupted(boolean)'. Clear interrupted flag if clear_flag is
	set.
	startable_flag: New private field.
	(Thread): Initialize `startable_flag'.
	(toString): Check for null thread group.
	* java/lang/natThread.cc: (struct natThread): New fields 
	`join_mutex', `join_cond'. Removed fields `joiner', `next'.
	(class locker): Removed.
	(initialize_native): Initialize `join_cond' and `join_mutex'.
	(interrupt): Now just calls _Jv_ThreadInterrupt().
	(join): Simplified. Just wait on the target thread's join condition.
	(finish_): Remove join list code. Unset thread group. Signal
	potential joiners by notifying the dying threads join_cond.
	(start): Check for illegal restarts.
	* java/lang/natObject.cc: Check for return value of _Jv_CondWait and
	act appropriatly.
	* include/posix-threads.h: Remove all HAVE_RECURSIVE_MUTEX related
	#defines and #ifdefs.
	(struct _Jv_Thread_t): New fields `thread_obj', `wait_cond',
	`wait_mutex', `next'.
	(struct _Jv_ConditionVariable_t): Define as a struct instead of 
	directly mapping to pthread_cond_t.
	(struct _Jv_Mutex_t): New recursive implementation.
	(_Jv_PthreadCheckMonitor): Reimplemented. Simple `owner' check.
	_Jv_HaveCondDestroy: Never define this for posix-threads.
	(_Jv_CondNotify): Remove inline implementation(s), prototype instead.
	(_Jv_CondNotifyAll): Ditto.
	(_Jv_MutexLock): Ditto.
	(_Jv_MutexUnlock): Ditto.
	(_Jv_MutexInit): Changed to reflect new mutex implementation.
	(_Jv_MutexDestroy): Ditto.
	(_Jv_CondDestroy): Removed.
	(_Jv_PthreadGetMutex): Removed.
	* include/win32-threads.h: (_Jv_CondNotify): Guess _JV_NOT_OWNER on an 
	error. Add a FIXME about this.
	(_Jv_CondNotifyAll): Ditto.
	* win32-threads.cc: (_Jv_CondWait): Return 0 on a timeout. Guess 
	_JV_NOT_OWNER on other errors. Add FIXME.

2000-03-26  Tom Tromey  <tromey@cygnus.com>

	* jni.cc (_Jv_JNI_PopSystemFrame): If environment has exception
	set, throw it.
	(call): Don't throw exception here.

2000-03-26  Tom Tromey  <tromey@cygnus.com>

	* java/lang/mprec.h: Use SIZEOF_VOID_P.
	* interpret.cc: Use SIZEOF_VOID_P.
	* include/java-cpool.h (_Jv_storeLong): Use SIZEOF_VOID_P.
	(_Jv_loadLong): Likewise.
	(_Jv_storeDouble): Likewise.
	* configure: Rebuilt.
	* configure.in: Check size of void*.

	* resolve.cc (ncode): Use FFI_PREP_RAW_CLOSURE and FFI_RAW_SIZE.

2000-03-26  Hans Boehm  <boehm@acm.org>

	* include/java-cpool.h (_Jv_storeLong, _Jv_loadLong,
	_Jv_storeDouble, _Jv_loadDouble): Define differently on 64 bit
	machine.
	* java/lang/ieeefp.h: Define __IEEE_BIG_ENDIAN or
	__IEEE_LITTLE_ENDIAN appropriately on IA64.
	* java/lang/mprec.h: Don't define Pack_32 on 64 bit machine.
	* javaprims.h (_Jv_word): Added `l' and `d' entries in 64 bit
	case.
	* resolve.cc (FFI_PREP_RAW_CLOSURE): New define.
	(FFI_RAW_SIZE): Likewise.
	(_Jv_InterpMethod::ncode): Use them.
	* interpret.cc (PUSHL, PUSHD, POPL, POPD, LOADL, LOADD, STOREL,
	STORED): Define differently on a 64 bit machine.
	(continue1): Use ffi_java_raw_call when appropriate.
 
2000-03-24  Warren Levy  <warrenl@cygnus.com>

	* java/math/BigInteger.java(divide): Handle the special case when
	dividing by 1 and the high bit of the dividend is set.
	(setShiftRight): Handle case when count == 0.

2000-03-24  Warren Levy  <warrenl@cygnus.com>

	* java/awt/Font.java(isBold): Fix syntax error.
	(isItalic): ditto.
	* java/awt/Frame.java(postEvent): ditto.
	* java/awt/Menu.java(postEvent): ditto.
	* java/awt/MenuBar.java(postEvent): ditto.
	* java/awt/Toolkit.java(init): Included a stub.

2000-03-21  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/awt/Event.java: Add all the event type constants.
	(Event): Implemented constructors.
	(controlDown): Implemented.
	(metaDown): Implemented.
	(paramString): Stubbed.
	(shiftDown): Implemented.
	(toString): Implemented.
	(translate): Implemented.

2000-03-21  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/lang/natClass.cc (isInstance): Initialize `this'.
	(isAssignableFrom): Initialize `this' and `klass'.
	(_Jv_IsAssignableFrom): If an interface has no idt, it is not 
	implemented by any loaded class, so return false.
	* java/lang/natClass.cc (isInstance): Use _Jv_IsAssignableFrom(), 
	not Class.isAssignableFrom(). Use JV_CLASS, not getClass().

2000-03-19  Warren Levy  <warrenl@cygnus.com>

	* java/awt/Color.java: Specified java.io for Serializable.
	* java/awt/Toolkit.java: Imported java.net.URL.

2000-03-19  Warren Levy  <warrenl@cygnus.com>

	* java/awt/Color.java: Rewrote to be more memory efficient (& compile).

2000-03-16  Warren Levy  <warrenl@cygnus.com>

	* java/awt/Color.java: New file.
	* java/awt/Graphics.java: New file.
	* java/awt/Image.java: New file.
	* java/awt/Paint.java: New file.
	* java/awt/PaintContext.java: New file.
	* java/awt/Transparency.java: New file.
	* java/util/Collection.java: New file.
	* java/util/Comparator.java: New file.
	* java/util/Iterator.java: New file.
	* java/util/List.java: New file.
	* java/util/ListIterator.java: New file.
	* Makefile.am: Added above new files.
	* Makefile.in: Rebuilt.

	* java/awt/Font.java (PLAIN): New field.
	(BOLD): New field.
	(ITALIC): New field.
	(ROMAN_BASELINE): New field.
	(CENTER_BASELINE): New field.
	(HANGING_BASELINE): New field.
	(name): New field.
	(style): New field.
	(size): New field.
	(pointSize): New field.
	(Font): Implemented constructor.
	(isPlain): Implemented method.
	(isBold): Implemented method.
	(isItalic): Implemented method.
	(getName): Implemented method.
	(getStyle): Implemented method.
	(getSize): Implemented method.
	(getSize2D): Implemented method.
	(decode): Stubbed.
	* java/awt/Frame.java (getFont): Stubbed.
	(postEvent): Stubbed.
	(remove): Stubbed.
	* java/awt/Menu.java (postEvent): Stubbed.
	* java/awt/MenuBar.java (getFont): Stubbed.
	(postEvent): Stubbed.
	* java/awt/Toolkit.java (getImage): Added abstract method.

2000-03-15  Tom Tromey  <tromey@cygnus.com>

	* java/io/natFileDescriptorWin32.cc (winerr): Now static.

	* prims.cc (win32_exception_handler): Reformatted.

	* include/win32-threads.h (_Jv_HaveCondDestroy): New define.
	(_Jv_HaveMutexDestroy): Likewise.

2000-03-15 Jon Beniston <jb7216@bristol.ac.uk>

	* java/io/natFileDescriptorWin32.cc: New file.
	* java/io/natFileWin32.cc: New file.
	* java/net/natInetAddress.cc: Added conditional inclusion of
	Windows / Winsock headers.
	* java/net/natPlainDatagramSocketImpl.cc: Added conditional
	inclusion of Windows / Winsock headers.
	* java/net/natPlainSocketImpl.cc: Added conditional inclusion of
	Windows / Winsock headers.
	* include/win32-signal.h: New file.
	* include/win32-threads.h: New file.
	* win32-threads.cc: New file.
	* exception.cc (win32_get_restart_frame): New function.
	* prims.cc (win32_exception_handler): New function.
	(main_init) Performs Winsock initialisation.
	(main_init) Installs exeception handler.

2000-03-14  Tom Tromey  <tromey@cygnus.com>

	* jni.cc (mangled_name): Fixed assertion.
	(JNI_GetCreatedJavaVMs): Don't comment out `buf_len' argument;
	turned assert into actual failure.

2000-03-09  Warren Levy  <warrenl@cygnus.com>

	* java/security/Key.java(serialVersionUID): Set to 0 for now.
	* java/security/interfaces/DSAPrivateKey.java(serialVersionUID): Ditto.
	* java/security/interfaces/DSAPublicKey.java(serialVersionUID): Ditto.

2000-03-09  Warren Levy  <warrenl@cygnus.com>

	* java/security/AlgorithmParameterGeneratorSpi.java: New file.
	* java/security/DigestException.java: New file.
	* java/security/GeneralSecurityException.java: New file.
	* java/security/InvalidAlgorithmParameterException.java: New file.
	* java/security/InvalidKeyException.java: New file.
	* java/security/InvalidParameterException.java: New file.
	* java/security/Key.java: New file.
	* java/security/KeyException.java: New file.
	* java/security/KeyPair.java: New file.
	* java/security/KeyPairGenerator.java: New file.
	* java/security/KeyPairGeneratorSpi.java: New file.
	* java/security/NoSuchProviderException.java: New file.
	* java/security/PrivateKey.java: New file.
	* java/security/Provider.java: New file.
	* java/security/PublicKey.java: New file.
	* java/security/SecureRandom.java: New file.
	* java/security/Security.java: New file.
	* java/security/Signature.java: New file.
	* java/security/SignatureException.java: New file.
	* java/security/interfaces/DSAKey.java: New file.
	* java/security/interfaces/DSAParams.java: New file.
	* java/security/interfaces/DSAPrivateKey.java: New file.
	* java/security/interfaces/DSAPublicKey.java: New file.
	* java/security/interfaces/RSAPrivateCrtKey.java: New file.
	* java/security/interfaces/RSAPrivateKey.java: New file.
	* java/security/interfaces/RSAPublicKey.java: New file.
	* java/security/spec/AlgorithmParameterSpec.java: New file.
	* java/security/spec/InvalidKeySpecException.java: New file.
	* java/security/spec/InvalidParameterSpecException.java: New file.
	* java/security/spec/KeySpec.java: New file.
	* java/security/spec/RSAPrivateCrtKeySpec.java: New file.
	* java/security/spec/RSAPrivateKeySpec.java: New file.
	* java/security/spec/RSAPublicKeySpec.java: New file.
	* Makefile.am: Added above java.security files.
	* Makefile.in: Rebuilt.

	* java/security/MessageDigest.java: Rewritten.
	* java/security/SecureClassLoader.java: Added JDK1.2 comment.

2000-03-09  Bryce McKinlay  <bryce@albatross.co.nz>

	* README: Updated.

2000-03-09  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/lang/natClassLoader.cc (_Jv_FindArrayClass): Call
	_Jv_PrepareConstantTimeTables.
	* java/lang/natClass.cc (_Jv_PrepareConstantTimeTables): Array
	classes should have an IDT, so don't return if klass is an array
	class.

2000-03-08  Tom Tromey  <tromey@cygnus.com>

	* java/lang/reflect/natArray.cc (newInstance): Don't allow array
	of `void' to be created.

2000-03-08  Warren Levy  <warrenl@cygnus.com>

	* java/math/BigInteger.java(signum): Handle zero properly.

2000-03-07  Tom Tromey  <tromey@cygnus.com>

	* All files: Updated copyright information.
	* COPYING: New file.
	* COPYING.LIB: Removed.
	* LIBGCJ_LICENSE: We now use GPL + special exception.

2000-03-07  Bryce McKinlay  <bryce@albatross.co.nz>

	* resolve.cc (_Jv_SearchMethodInClass): New function.
	(_Jv_ResolvePoolEntry): Search superinterfaces for interface methods.
	* java/lang/Class.h (_Jv_SearchMethodInClass): New prototype.

2000-03-07  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/lang/Class.h (union _Jv_IDispatchTable): New declaration.
	(struct _Jv_ifaces): New declaration.
	JV_CLASS: New macro definition.
	(getComponentType): Relocate below isArray() for inlining.
	(getModifiers): Declare `inline'.
	(getSuperclass): Ditto.
	(isArray): Ditto.
	(isPrimitive): Ditto.
	(_Jv_IsAssignableFrom): New prototype.
	(_Jv_LookupInterfaceMethodIdx): New prototype. Predeclare with "C"
	linkage.
	(_Jv_InitClass): Move from natClass.cc. Declare `inline'.
	Check for JV_STATE_DONE before invoking initializeClass().
	(_Jv_PrepareConstantTimeTables): New prototype.
	(_Jv_GetInterfaces): Ditto.
	(_Jv_GenerateITable): Ditto.
	(_Jv_GetMethodString): Ditto.
	(_Jv_AppendPartialITable): Ditto.
	(_Jv_FindIIndex): Ditto.
	depth, ancestors, idt: New class fields.

	* java/lang/natClass.cc (isAssignableFrom): Move functionality to
	inline function `_Jv_IsAssignableFrom'. Use that function.
	(isInstance): Declare `inline'.
	(initializeClass): Get lock on class before checking `state'. Unlock 
	before calling resolveClass0. Call _Jv_PrepareConstantTimeTables with 
	the lock held.
	(_Jv_LookupInterfaceMethod): Use _Jv_GetMessageString.
	(_Jv_IsAssignableFrom): New inline function. Test assignability using 
	class->depth and ancestor table.
	(_Jv_IsInstanceOf): Use _Jv_IsAssignableFrom.
	(_Jv_CheckCast): Move from prims.cc. Use JV_CLASS and
	_Jv_IsAssignableFrom.
	(_Jv_CheckArrayStore): Ditto.
	(_Jv_LookupInterfaceMethodIdx): New function. 
	INITIAL_IOFFSETS_LEN, INITIAL_IFACES_LEN: New #defines.
	(_Jv_PrepareConstantTimeTables): New function.
	(_Jv_IndexOf): Ditto.
	(_Jv_GetInterfaces): Ditto.
	(_Jv_GenerateITable): Ditto.
	(_Jv_GetMethodString): Ditto.
	(_Jv_AppendPartialITable): Ditto.
	iindex_mutex, iindex_mutex_initialized: New static fields.
	(_Jv_FindIIndex): New function.

	* java/lang/natClassLoader.cc (_Jv_NewClass): Set new jclass fields.

	* prims.cc (_Jv_CheckCast): Moved to natClass.cc.
	(_Jv_CheckArrayStore): Ditto.
	(JvNewCharArray, JvNewBooleanArray, JvNewByteArray, JvNewShortArray,
	JvNewIntArray, JvNewLongArray, JvNewFloatArray, JvNewDoubleArray):
	Moved to gcj/array.h.
	(_Jv_Realloc): New function.

	* gcj/cni.h: Move _Jv_PrimClass definitions to gcj/array.h.

	* gcj/array.h: _Jv_PrimClass definitions moved from gcj/cni.h.
	(JvNewCharArray, JvNewBooleanArray, JvNewByteArray,
	JvNewShortArray, JvNewIntArray, JvNewLongArray, JvNewFloatArray,
	JvNewDoubleArray): Implementations moved from prims.cc and
	declared `inline'.

	* gcj/javaprims.h (_Jv_Realloc): Prototype.

	* include/jvm.h (_Jv_LookupInterfaceMethodIdx): Prototype.

2000-03-06  Tom Tromey  <tromey@cygnus.com>

	* jni.cc (MARK_NONE): New define.
	(MARK_USER): Likewise.
	(MARK_SYSTEM): Likewise.
	(struct _Jv_JNI_LocalFrame): Made `marker' bigger and `size'
	smaller.
	(_Jv_JNI_DeleteLocalRef): Use MARK_NONE in assert.
	(_Jv_JNI_EnsureLocalCapacity): Use MARK_NONE.
	(_Jv_JNI_PushLocalFrame): Use MARK_USER.
	(_Jv_JNI_PopLocalFrame): New version with additional `stop'
	argument.
	(call): Use MARK_SYSTEM.
	(_Jv_GetJNIEnvNewFrame): New function.
	(_Jv_LookupJNIMethod): New function.
	(_Jv_JNI_PopSystemFrame): New function.
	(call): Use _Jv_JNI_PopSystemFrame and _Jv_LookupJNIMethod.

2000-03-05  Tom Tromey  <tromey@cygnus.com>

	Fix for PR libgcj/43:
	* include/Makefile.in: Rebuilt.
	* include/Makefile.am (include_HEADERS): New define.

2000-03-05  Anthony Green  <green@redhat.com>

	* gcj/javaprims.h ("Java"): Remove FirstThread.

	* configure.host: Fix __NO_MATH_INLNES botch.

	* Makefile.in: Rebuilt.
	* Makefile.am (nat_source_files): Move natFirstThread.cc.
	(gnu/gcj/runtime/FirstThread.h): Moved.
	(ordinary_java_source_files): Move FirstThread.java.
	* prims.cc: Deal with FirstThread movement.
	(JvRunMain): Ditto.
	(_Jv_RunMain): Ditto.

	* gnu/gcj/runtime/FirstThread.java: Moved from java/lang.
	* gnu/gcj/runtime/natFirstThread.cc: Ditto.

2000-03-05  Warren Levy  <warrenl@cygnus.com>

	* java/net/DatagramSocket.java(DatagramSocket(int,InetAddress)):
	  Handle null addresses.

2000-03-04  Anthony Green  <green@redhat.com>

	* configure.host (libgcj_flags): Define __NO_MATH_INLINES.
	See PR gcj/151.

2000-03-04  Anthony Green  <green@redhat.com>

	* configure: Rebuilt.
	* configure.in (ZLIBTESTSPEC): New macro.
	(GCTESTSPEC): New macro.
	(LIBGCJTESTSPEC): New macro.
	* libgcj-test.spec.in: New file.

2000-03-02  Tom Tromey  <tromey@cygnus.com>

	* include/java-interp.h: Don't include MethodInvocation.h.
	(class _Jv_InterpMethod): Don't make MethodInvocation a friend.
	* Makefile.in: Rebuilt.
	* Makefile.am (gnu/gcj/runtime/MethodInvocation.h): Removed.
	(ordinary_java_source_files): Don't mention
	MethodInvocation.java.
	* gnu/gcj/runtime/MethodInvocation.java: Removed.
	* interpret.cc (MethodInvocation::continue1): Removed.
	(run): Handle exceptions here.
	* java/lang/ClassLoader.java (defineClass1, defineClass2):
	Removed.
	* java/lang/natClassLoader.cc (defineClass0): Catch exceptions
	here.
	(defineClass2): Removed.

	* java/lang/reflect/Method.java (hack_trampoline, hack_call):
	Removed.
	* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Catch
	exceptions here.
	(hack_call): Removed.

	* java/lang/Class.h (Class): Removed hackRunInitializers,
	hackTrampoline.
	* java/lang/natClass.cc (hackRunInitializers): Removed.
	(initializeClass): Catch exceptions here.
	Include ExceptionInInitializerError.h.
	* java/lang/Class.java (hackTrampoline, hackRunInitializers):
	Removed.

	* java/lang/Object.h (Object): Don't mention hack12_6.
	* java/lang/natObject.cc (_Jv_FinalizeObject): Catch exceptions
	here.
	* java/lang/Object.java (hack12_6): Removed.

	* java/lang/natThread.cc (run_): Renamed.  Catch exceptions here.
	(start): Use run_, not run__.
	* java/lang/Thread.java (run_): Renamed from run__; old run_
	removed.

	* jni.cc (_Jv_JNI_FindClass): Handle exceptions.
	(_Jv_JNI_EnsureLocalCapacity): Likewise.
	(_Jv_JNI_DefineClass): Likewise.
	(_Jv_JNI_ThrowNew): Likewise.
	(_Jv_JNI_AllocObject): Likewise.
	(_Jv_JNI_GetAnyMethodID): Likewise.
	(_Jv_JNI_CallAnyMethodV): Likewise.
	(_Jv_JNI_CallAnyMethodA): Likewise.
	(_Jv_JNI_CallAnyVoidMethodV): Likewise.
	(_Jv_JNI_CallAnyVoidMethodA): Likewise.
	(_Jv_JNI_GetAnyFieldID): Likewise.
	(_Jv_JNI_NewString): Likewise.
	(_Jv_JNI_NewStringUTF): Likewise.
	(_Jv_JNI_GetStringUTFChars): Likewise.
	(_Jv_JNI_NewObjectArray): Likewise.
	(_Jv_JNI_NewPrimitiveArray): Likewise.
	(_Jv_JNI_GetPrimitiveArrayRegion): Likewise.
	(_Jv_JNI_GetStringRegion): Likewise.
	(_Jv_JNI_GetStringUTFRegion): Likewise.
	(_Jv_JNI_SetPrimitiveArrayRegion): Likewise.
	(_Jv_JNI_MonitorEnter): Likewise.
	(_Jv_JNI_MonitorExit): Likewise.
	(_Jv_JNI_ToReflectedField): Likewise.
	(_Jv_JNI_ToReflectedMethod): Likewise.
	(_Jv_JNI_RegisterNatives): Likewise.
	(_Jv_JNI_AttachCurrentThread): Likewise.
	(_Jv_JNI_DestroyJavaVM): Likewise.

2000-02-28  Mo DeJong  <mdejong@cygnus.com>

	* java/util/zip/ZipOutputStream.java(closeEntry) : Fixed
	error caused by the incorrect casting of a long to an int.

2000-02-28  Mo DeJong  <mdejong@cygnus.com>

	* java/util/zip/ZipOutputStream.java(write_entry) : Fixed
	SIGSEV caused by use of the wrong instance variable.

2000-02-27  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/io/File.java (File(String, String)): For dirPath, treat an
	empty String the same as `null'.

2000-02-26  Anthony Green  <green@cygnus.com>

	* gnu/gcj/io/MimeTypes.java: Test for null.

	* jni.cc (_Jv_JNI_AttachCurrentThread): Minor cleanup.
	(JNI_GetCreatedJavaVMs): Remove compiler warning.

	* java/net/URLConnection.java: Update copyright notice.

2000-02-25  Tom Tromey  <tromey@cygnus.com>

	* jni.cc (_Jv_JNI_RegisterNatives): Conditionalize body on
	`INTERPRETER'.

2000-02-25  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/net/URLConnection.java (initializeDateFormats): New
	private method.
	(getHeaderFieldDate): Call initializeDateFormats if required.
	locale, dateFormat1, dateFormat2, dateFormat3: Don't initialize
	these.
	Fix for PR libgcj/38.

2000-02-24  Warren Levy  <warrenl@cygnus.com>

	* java/math/BigInteger.java(ival): Made private.
	(words): Ditto.
	(neg): Ditto.

2000-02-20  Anthony Green  <green@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (ordinary_java_source_files): Add
	gnu/gcj/io/DefaultMimeTypes.java and gnu/gcj/io/MimeTypes.java

	* scripts/MakeDefaultMimeTypes.java: New file.
	* scripts/mime.types: New file.
	* scripts/classes.pl: Moved from top level.
	* classes.pl: Moved to scripts directory.

	* java/net/URLConnection.java: Implement guessContentTypeFromName.

	* gnu/gcj/io/MimeTypes.java: New file.
	* gnu/gcj/io/DefaultMimeTypes.java: New file.

2000-02-20  Tom Tromey  <tromey@cygnus.com>

	* boehm.cc (_Jv_AllocBytes): Clear returned memory.

2000-02-19  Bryce McKinlay  <bryce@albatross.co.nz>

	* java/util/zip/ZipEntry.java (setCrc): Fix overflow.
	(setSize): ditto.

2000-02-18  Tom Tromey  <tromey@cygnus.com>

	* include/jvm.h (_Jv_GetJavaVM): Declare.
	* include/java-interp.h (_Jv_GetFirstMethod): New function.
	(_Jv_MethodBase::get_method): New method.
	(_Jv_JNIMethod::set_function): New method.
	* jni.cc (_Jv_JNI_UnregisterNatives): New function.
	(_Jv_JNI_RegisterNatives): New function.
	(_Jv_JNIFunctions): Updated for new functions.
	(_Jv_GetJavaVM): New function.
	(_Jv_JNI_GetJavaVM): Use it.  Now static.
	(_Jv_JNI_AttachCurrentThread): Create a new JNIEnv if this thread
	is already a Java thread but does not have a JNIEnv yet.

	* java/lang/natRuntime.cc (_load): Pass the JavaVM to the onload
	function.

2000-02-17  Tom Tromey  <tromey@cygnus.com>

	* gcj/field.h (_Jv_Field::getClass): Don't use JvAssert.
	Fixes PR gcj/152.

2000-02-16  Tom Tromey  <tromey@cygnus.com>

	* jni.cc (_Jv_JNI_CallStaticMethodV): Added some assertions.

	* jni.cc (_Jv_JNI_NewObjectV): Corrected assertion.
	(_Jv_JNI_NewObject): Likewise.
	(_Jv_JNI_NewObjectA): Likewise.
	(_Jv_JNI_CallAnyMethodV): In constructor case, pass correct value
	as "return" type to _Jv_CallAnyMethodA.
	(_Jv_JNI_CallAnyMethodA): Likewise.
	(_Jv_JNI_CallAnyVoidMethodV): Likewise.

	* jni.cc (_Jv_JNI_FindClass): Use ClassLoader.loadClass, not
	findClass.

2000-02-15  Tom Tromey  <tromey@cygnus.com>

	* resolve.cc (ncode): Set args_raw_size.  Compute jni_cif and
	jni_arg_types.
	(init_cif): Added `rtype_p' argument.
	* include/java-interp.h (class _Jv_MethodBase): Added
	args_raw_size.
	(class _Jv_InterpMethod): Removed args_raw_size.
	(class _Jv_JNIMethod): Added jni_cif and jni_arg_types fields.
	* jni.cc (call): Pass JNIEnv and (for static methods only) the
	class pointer as well as the ordinary arguments.

	* jni.cc (mangled_name): Skip leading `(' in signature.

	* jni.cc (add_char): Added missing `else'.

	* jni.cc (_Jv_JNI_AttachCurrentThread): Return error if malloc
	fails.

2000-02-15  Bryce McKinlay  <bryce@albatross.co.nz>

	* NEWS: Updated.

	* java/lang/natRuntime.cc (_load): Include library path with
	exception message.

	* java/lang/natSystem.cc (init_properties): set java.lang.classpath 
	property.

	* java/lang/natThread.cc (dumpStack): Removed.
	* java/lang/Thread.java (dumpStack): Implemented.

2000-02-15  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natRuntime.cc (_load): On Unix, prefix library name
	with `lib' for loadLibrary.  Fixes PR gcj/150.

2000-02-14  Warren Levy  <warrenl@cygnus.com>

	* gnu/gcj/math/MPN.java(findLowestBit): Made methods public.

	* java/math/BigInteger.java(BigInteger(int,int,java.util.Random):
	  New constructor.
	(min): Implemented.
	(max): Implemented.
	(modPow): Rewritten to not use the naive, slow, brute force approach.
	(isProbablePrime): Implemented.
	(testBit): Implemented.
	(flipBit): Implemented.
	(getLowestSetBit): Implemented.

2000-02-16  Anthony Green  <green@redhat.com>

	* configure.host: Use the same options for i386 and i486 as we do
	for i586 and i686.

2000-02-12  Tom Tromey  <tromey@cygnus.com>

	* java/io/File.java (createTempFile): Use low bits from counter,
	not high bits.

Fri Feb 11 19:48:08 2000  Anthony Green  <green@cygnus.com>

	* THANKS: More thanks.

2000-02-11  Tom Tromey  <tromey@cygnus.com>

	* interpret.cc (continue1): Use STOREA, not STOREI, to implement
	astore instruction.  From Hans Boehm.

2000-02-11  Warren Levy  <warrenl@cygnus.com>

	* java/math/BigInteger.java(BigInteger(String, int)): New constructor.
	(BigInteger(String)): New constructor.
	(not): Rewritten using version from Kawa's BitOps class.
	(valueOf): New private methods from Kawa's BitOps class.
	(swappedOp): ditto.
	(bitOp): ditto.
	(setBitOp): ditto.
	(and): Implemented.
	(or): Implemented.
	(xor): Implemented.
	(andNot): Implemented.
	(clearBit): Implemented.
	(setBit): Implemented.
	(bitCount): Implemented.
	(toByteArray): Implemented.

2000-02-11  Tom Tromey  <tromey@cygnus.com>

	* java/io/File.java (nextValue): Now synchronized.

2000-02-10  Tom Tromey  <tromey@cygnus.com>

	* java/io/natFileDescriptorPosix.cc (open): Recognize EXCL flag.
	* java/io/FileDescriptor.java (EXCL): New static field.
	* java/io/File.java (tmpdir): New static field.
	(createTempFile): New method.
	(nextValue): New method.
	* java/lang/natSystem.cc (init_properties): Set java.io.tmpdir
	property.

	* include/jni.h (JNI_FALSE): Renamed from JNI_TRUE; oops.
	(jboolean): Declare as an attributed int, not a bool.
	(_Jv_func): Declare differently for C.

	* gnu/gcj/jni/natNativeThread.cc: New file.
	* gnu/gcj/jni/NativeThread.java: New file.
	* java/lang/Thread.java (data): Now a RawData.
	* include/jvm.h (_Jv_GetCurrentJNIEnv, _Jv_SetCurrentJNIEnv):
	Declare.
	* Makefile.in: Rebuilt.
	* Makefile.am (java/lang/Thread.h): New target.
	(ordinary_java_source_files): Added NativeThread.java.
	(nat_source_files): Added natNativeThread.cc.
	* java/lang/natThread.cc: Include <jni.h>
	(struct natThread): Added `jni_env' field.
	(_Jv_GetCurrentJNIEnv): New function.
	(_Jv_SetCurrentJNIEnv): Likewise.
	(initialize_native): Initialize jni_env.
	Include RawData.h.
	* jni.cc (ThreadGroupClass): New define.
	(_Jv_JNI_InvokeFunctions): New structure.
	(JNI_GetCreatedJavaVMs): New function.
	(the_vm): New global.
	(JNI_GetDefaultJavaVMInitArgs): New function.
	Include NativeThread.h.
	(NativeThreadClass): New define.
	(_Jv_JNI_EnsureLocalCapacity): Return JNI_ERR, not -1.
	(_Jv_JNI_DestroyJavaVM): New function.
	(_Jv_JNI_AttachCurrentThread): New function.
	(_Jv_JNI_DetachCurrentThread): New function.
	(_Jv_JNI_GetEnv): New function.
	(JNI_CreateJavaVM): New function.
	(_Jv_JNI_GetJavaVM): New function.
	(_Jv_JNIFunctions): Added entry for GetJavaVM.
	* include/jni.h (JavaVMAttachArgs): New structure.
	(JNI_EDETACHED): New define.
	(JNI_EVERSION): Likewise.
	(JavaVM): Define properly.
	(struct JNIInvokeInterface): New structure.
	(class _Jv_JavaVM): New class.
	(JNI_OnLoad, JNI_OnUnload): Declare.
	(JNI_GetDefaultJavaVMInitArgs, JNI_CreateJavaVM,
	JNI_GetCreatedJavaVMs): Declare.
	(JavaVMInitArgs): New typedef.
	(JavaVMOption): Likewise.
	(JNI_ERR): New define.
	(JNI_OK): Likewise.

2000-02-10  Andrew Haley  <aph@cygnus.com>

	* interpret.cc: Don't include fdlibm.h.
	Replace #if with #ifdef throughout.
	Declare extern __ieee754_fmod.
	(continue1): Remove op_getfield, op_getstatic, op_putfield,
	op_putstatic insns.
	* resolve.cc (_Jv_PrepareClass): Use imeth as method pointer.
	Search class hierarchy for superclass vtable.

	* java/lang/natClassLoader.cc (_Jv_UnregisterClass): Don't fall
	off the end of a pointer list.

	* java/lang/natThread.cc (stop): Don't abort, throw an exception
	instead.
	(suspend): Ditto.
	
2000-02-09  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natRuntime.cc (_load): Call add_library.
	(loadLibraryInternal): Likewise.

	* gnu/gcj/convert/natIconv.cc (Input_iconv::finalize): Call
	iconv_close when handle is not NULL.  Thanks to Andrew Haley.
	(Output_iconv::finalize): Likewise.

2000-02-08  Tom Tromey  <tromey@cygnus.com>

	* java/util/Properties.java (setProperty): New method.
	(store): New method.

2000-02-07  Tom Tromey  <tromey@cygnus.com>

	* java/lang/Runtime.java (_load): Declare.
	(load, loadLibrary): Wrote in terms of _load.
	* java/lang/natRuntime.cc (load): Call JNI_OnLoad if it appears in
	library.
	(loadLibrary): Likewise.
	Include <jni.h>.
	(_load): New method.
	(loadLibrary, load): Removed.

	* jni.cc (ThrowableClass): New define.
	(_Jv_JNI_Throw): Check argument.
	(_Jv_JNI_ThrowNew): Likewise.
	(wrap_value): Don't wrap object if it is NULL.
	(_Jv_JNI_DefineClass): Use wrap_value.
	(_Jv_JNI_FindClass): Likewise.
	(_Jv_JNI_GetSuperclass): Likewise.
	(_Jv_JNI_ExceptionOccurred): Likewise.
	(_Jv_JNI_AllocObject): Likewise.
	(_Jv_JNI_GetObjectClass): Likewise.
	(_Jv_JNI_NewString): Likewise.
	(_Jv_JNI_NewStringUTF): Likewise.
	(_Jv_JNI_NewObjectArray): Likewise.
	(_Jv_JNI_GetObjectArrayElement): Likewise.
	(_Jv_JNI_NewPrimitiveArray): Likewise.
	(_Jv_JNI_ToReflectedField): Likewise.
	(_Jv_JNI_ToReflectedMethod): Likewise.
	(_Jv_JNI_AllocObject): Check argument.
	(_Jv_JNI_NewObjectV): Likewise.
	(_Jv_JNI_NewObject): Likewise.
	(_Jv_JNI_NewObjectA): Likewise.
	(_Jv_JNI_GetObjectClass): Likewise.
	(_Jv_JNI_GetField): Likewise.
	(_Jv_JNI_SetField): Likewise.

	* interpret.cc (PUSHL): Don't use expression statement.
	(PUSHD): Likewise.
	(LOADL): Likewise.
	(STOREL): Likewise.

	* jni.cc (add_char): Conditional on INTERPRETER.
	(mangled_name): Likewise.
	(call): Likewise.
	* include/java-interp.h (class _Jv_MethodBase): Conditional on
	INTERPRETER.
	(class _Jv_JNIMethod): Likewise.

2000-02-04  Warren Levy  <warrenl@cygnus.com>

	* Makefile.am: Added MPN.java and BigInteger.java.
	* Makefile.in: Rebuilt.
	* gnu/gcj/math/MPN.java: New file.  From Kawa by Per Bothner
	<per@bothner.com>.
	* java/math/BigInteger.java: New file.  Based primarily on
	Kawa's IntNum.java by Per Bothner <per@bothner.com>.

2000-02-04  Tom Tromey  <tromey@cygnus.com>

	* defineclass.cc (handleMethodsBegin): Allocate _Jv_MethodBase
	pointers.
	(handleMethodsEnd): Fixed error messages.  Create a _Jv_JNIMethod
	if the method is native.
	* resolve.cc (ncode): Don't handle native methods.
	(_Jv_JNIMethod::ncode): New method.
	(_Jv_PrepareClass): Handle native methods.
	* jni.cc (call): Renamed from _Jv_JNI_conversion_call.
	Include AbstractMethodError.h.
	(add_char): New function.
	(mangled_name): Likewise.
	* include/java-interp.h (class _Jv_JNIMethod): New class.
	(class _Jv_MethodBase): New class.
	(class _Jv_InterpMethod): Derive from _Jv_MethodBase.
	(_Jv_InterpClass): Changed `interpreted_methods' field to type
	`_Jv_MethodBase'.

	* include/jvm.h (_Jv_FindSymbolInExecutable): Declare.
	* java/lang/natRuntime.cc (libraries_size, libraries_count,
	libraries): New globals.
	(add_library): New function.
	(_Jv_FindSymbolInExecutable): New function.

	* java/lang/natClassLoader.cc (initiated_classes, loaded_classes):
	Now static.

2000-02-04  Andrew Haley  <aph@cygnus.com>

	* java/lang/Throwable.java (CPlusPlusDemangler): New class.
	(printStackTrace): Use a CPlusPlusDemangler to demangle names.
	* java/lang/natThrowable.cc (printRawStackTrace): Rename
	printStackTrace to printRawStackTrace.

2000-02-03  Tom Tromey  <tromey@cygnus.com>

	* java/util/Calendar.java (toString): New method.
	* java/util/SimpleTimeZone.java (clone): New method.
	(toString): New method.
	* java/util/TimeZone.java (clone): New method.
	* java/text/SimpleDateFormat.java (clone): New method.
	* java/text/NumberFormat.java (clone): New method.
	(equals): New method.
	* java/text/Format.java (clone): New method.
	* java/text/DateFormatSymbols.java (DateFormatSymbols): New
	constructor.
	(clone): New method.
	* java/text/DateFormat.java (clone): New method.
	* java/text/Collator.java (clone): New method.

2000-02-03  Tom Tromey  <tromey@cygnus.com>

	* java/io/PipedOutputStream.java (write(byte[], int, int)): New
	method.

2000-02-01  Tom Tromey  <tromey@cygnus.com>

	* include/java-interp.h (_Jv_JNI_conversion_call): Declare.
	* resolve.cc (ncode): Use _Jv_JNI_conversion_call when
	constructing the closure if the function is native.
	* jni.cc (_Jv_JNI_conversion_call): Now returns `void'.  No longer
	a template function, #if'd out, or static.
	Include <java-interp.h>.

	* include/jni.h (class _Jv_JNIEnv): Corrected calls using `...'.

	* include/jni.h (class _Jv_JNIEnv): Added all C++ inline methods.

	* jni.cc (_Jv_JNI_PopLocalFrame): Leave loop when `n == NULL'.
	(_Jv_JNI_conversion_call): _Jv_JNI_PopLocalFrame will never leave
	`locals == NULL'.
	(wrap_value): New function.
	(_Jv_JNI_CallAnyMethodV): Use it.
	(_Jv_JNI_CallAnyMethodA): Likewise.
	(_Jv_JNI_GetField): Use wrap_value; removed specialized version.
	(_Jv_JNI_GetStaticField): Likewise.

	* jni.cc (_Jv_JNI_GetField): Specialize for jobject.
	(_Jv_JNI_GetStaticField): Likewise.

2000-01-31  Tom Tromey  <tromey@cygnus.com>

	* prims.cc (_Jv_MallocUnchecked): New function.
	(main_init): Call _Jv_JNI_Init.
	* include/jvm.h (_Jv_MallocUnchecked): Declare.
	(_Jv_JNI_Init): Declare.
	* jni.cc: Include Hashtable.h, OutOfMemoryError.h, Integer.h,
	<string.h>.
	(_Jv_JNI_NewGlobalRef): New function.
	(_Jv_JNI_DeleteGlobalRef): New function.
	(_Jv_JNI_DeleteLocalRef): New function.
	(_Jv_JNI_conversion_call): Initialize and clear local reference
	frame.
	(_Jv_JNI_NewLocalRef): New function.
	(struct _Jv_JNI_LocalFrame): New structure.
	(_Jv_JNI_PushLocalFrame): New function.
	(_Jv_JNI_EnsureLocalCapacity): New function.
	(FRAME_SIZE): New define.
	(_Jv_JNI_GetStringChars): Mark string, not characters.
	(_Jv_JNI_ReleaseStringChars): Unmark string, not characters.
	(_Jv_JNI_GetPrimitiveArrayElements): Mark array, not elements.
	(_Jv_JNI_ReleasePrimitiveArrayElements): Unmark array, not
	elements.
	(_Jv_JNI_DefineClass): Make return value a local ref.
	(_Jv_JNI_FindClass): Likewise.
	(_Jv_JNI_GetSuperclass): Likewise.
	(_Jv_JNI_ExceptionOccurred): Likewise.
	(_Jv_JNI_AllocObject): Likewise.
	(_Jv_JNI_GetObjectClass): Likewise.
	(_Jv_JNI_CallAnyMethodV): Likewise.
	(_Jv_JNI_NewString): Likewise.
	(_Jv_JNI_NewStringUTF): Likewise.
	(_Jv_JNI_NewObjectArray): Likewise.
	(_Jv_JNI_GetObjectArrayElement): Likewise.
	(_Jv_JNI_ToReflectedField): Likewise.
	(_Jv_JNI_ToReflectedMethod): Likewise.
	(_Jv_JNIFunctions): Updated table for new functions.
	(_Jv_JNI_Init): New function.
	(mark_for_gc): Wrote.
	(unmark_for_gc): Wrote.
	* include/jni.h (struct JNINativeInterface): Removed name from
	PopLocalFrame parameter.
	(class _Jv_JNIEnv): Added `locals' field.

Mon Jan 31 00:43:15 2000  Anthony Green  <green@redhat.com>

	* gnu/gcj/convert/natIconv.cc (read): Minor fixes.
	(write): Ditto.

2000-01-30  Tom Tromey  <tromey@cygnus.com>

	* include/config.h.in: Rebuilt.
	* acconfig.h (HAVE_ICONV): Define.
	* configure: Rebuilt.
	* configure.in: Check for `iconv' function.
	* gnu/gcj/convert/BytesToUnicode.java (getDecoder): Try iconv if
	no specific encoder exists.
	* gnu/gcj/convert/UnicodeToBytes.java (getEncoder): Try iconv if
	no specific encoder exists.
	* Makefile.in: Rebuilt.
	* Makefile.am (convert_source_files): Mention Input_iconv.java and
	Output_iconv.java.
	(nat_source_files): Added natIconv.cc.
	* gnu/gcj/convert/natIconv.cc: New file.
	* gnu/gcj/convert/Input_iconv.java: New file.
	* gnu/gcj/convert/Output_iconv.java: New file.

2000-01-28  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in: Rebuilt.
	* Makefile.am (LIBFFIINCS): Added MULTIBUILDTOP.

2000-01-26  Tom Tromey  <tromey@cygnus.com>

	* gcj/method.h (JvNumMethods): Moved from Class.h.
	(JvGetFirstMethod): Likewise.
	* java/lang/Class.h (Object): Updated decl of
	_Jv_JNI_ToReflectedField.
	(Object): Added _Jv_JNI_ToReflectedMethod as a friend.
	* Makefile.in: Rebuilt.
	* Makefile.am (java/lang/reflect/Field.h): Added `jboolean'
	argument of _Jv_JNI_ToReflectedField.
	(java/lang/reflect/Constructor.h): Added _Jv_JNI_ToReflectedMethod
	as a friend.
	(java/lang/reflect/Method.h): Likewise.
	* include/jni.h (class _Jv_JNIEnv): Added `klass' member.  Use
	__GCJ_JNI_IMPL__.
	(jweak): New typedef.
	(struct JNINativeInterface): Correctly declare remaining entries.
	* jni.cc: Include Class.h, ClassLoader.h.
	(_Jv_JNI_FindClass): New function.
	(_Jv_JNI_DefineClass): New function.
	(_Jv_JNI_conversion_call): New function.
	(_Jv_JNI_FindClass): Use current class loader to find class.
	(_Jv_JNI_ExceptionCheck): New function.
	(_Jv_JNI_FromReflectedField): Now static.
	(MethodClass): New define.
	(_Jv_JNI_FromReflectedMethod): New function.
	(_Jv_JNI_ToReflectedMethod): Likewise.
	Include Method.h.
	(_Jv_JNI_IsAssignableFrom): Renamed.
	(_Jv_JNI_GetStringRegion): New function.
	Include StringIndexOutOfBoundsException.h.
	(_Jv_JNI_GetStringUTFRegion): New function.
	(_Jv_JNIFunctions): Updated for new functions.
	(_Jv_JNI_GetPrimitiveArrayCritical): New function
	(_Jv_JNI_ReleasePrimitiveArrayCritical): Likewise.
	(_Jv_JNI_GetStringCritical): New function.
	(_Jv_JNI_ReleaseStringCritical): Likewise.
	(get_throwable): Removed.
	(GCJ_JV_JNIENV_FRIEND): Removed.
	(__GCJ_JNI_IMPL__): Define.
	Include method.h.

	* resolve.cc (get_ffi_type_from_signature): Handle case where
	boolean is an int.

Tue Jan 25 08:51:16 2000  Tom Tromey  <tromey@ferrule.cygnus.com>

	* interpret.cc (run): Don't call println.
	Don't include PrintStream.h.

	* gcj/field.h (struct _Jv_Field): Use "jshort" as type for
	nameIndex.  Use "jint" as type for boffset.
	* java/lang/Class.h (struct _Jv_Method): Made accflags a
	_Jv_ushort.
	(Class): Likewise.  Also changed type of method_count,
	vtable_method_count, size_in_bytes, field_count,
	static_field_count, interface_count.
	* gcj/array.h (__JArray): Made `length' a const jsize, not an
	int.

2000-01-21  Tom Tromey  <tromey@cygnus.com>

	* java/lang/reflect/natConstructor.cc (newInstance): Use
	_Jv_CallAnyMethodA.
	* include/jvm.h: Declare _Jv_CallAnyMethodA.
	* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Renamed
	from _Jv_CallNonvirtualMethodA.  Changed interface; overloaded.
	Include <jni.h>.
	(COPY): Removed.
	(invoke): Use _Jv_CallAnyMethodA.
	(VAL): Redefined.
	* java/lang/Class.h (Class): Declare JvGetFirstStaticField,
	JvNumStaticFields, JvNumMethods, and JvGetFirstMethod as friend
	functions.
	(struct _Jv_Method): Added getNextMethod method.
	(JvNumMethods): New function.
	(JvGetFirstMethod): Likewise.
	* gcj/field.h (JvGetFirstStaticField): New function.
	(JvNumStaticFields): Likewise.
	(getNextField): Renamed from getNextInstanceField.
	(struct _Jv_Field): New method getClass.
	* jni.cc: Wrote many new functions.
	* include/jni.h (JNI_TRUE): Define.
	(JNI_FALSE): Likewise.
	(jobject, jclass, jstring, jarray, jthrowable, jobjectArray,
	jbyteArray, jshortArray, jintArray, jlongArray, jbooleanArray,
	jcharArray, jfloatArray, jdoubleArray): New typedefs.
	(jfieldID, jmethodID): Likewise.
	(JNI_COMMIT, JNI_ABORT): New defines.
	(JNINativeMethod): New struct.
	(struct JNINativeInterface): Correctly declared more entries.
	(class _Jv_JNIEnv): Added `ex' member.
	(JNI_VERSION_1_1): New define.
	(JNI_VERSION_1_2): Likewise.

	* boehm.cc (_Jv_MarkObj): Use getNextField, not
	getNextInstanceField.

2000-01-20  Tom Tromey  <tromey@cygnus.com>

	* resolve.cc (StringClass): Removed.
	* defineclass.cc (StringClass): Removed.

2000-01-19  Bryce McKinlay  <bryce@albatross.co.nz>

	* NEWS: updated.

2000-01-19  Tom Tromey  <tromey@cygnus.com>

	* interpret.cc (PC_REGISTER_ASM): Removed.

	* java/lang/natThrowable.cc: Don't use `#pragma implementation'.
	From Bryce McKinlay.

	* All files: Updated copyright to reflect Cygnus purchase.

2000-01-18  Bryce McKinlay <bryce@albatross.co.nz>

	* configure: Rebuilt.
	* configure.in: Recognize --disable-interpreter.

2000-01-18  Andrew Haley  <aph@cygnus.com>

	* name-finder.cc (lookup): Check for dladdr function.
	acconfig.h (HAVE_DLADDR): Add.
	configure.in: Check for HAVE_DLADDR
	configure: Rebuilt.
	include/config.h.in:  Rebuilt.

2000-01-17  Andrew Haley  <aph@cygnus.com>

	* prims.cc (_Jv_RunMain): Set the name of this executable.

2000-01-17  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natThrowable.cc (fillInStackTrace): Return `this' even
	when backtrace can't be computed.

	* configure: Rebuilt.
	* configure.in: Fixed typo in AC_CONFIG_SUBDIRS call.

	* java/lang/Runtime.java (loadLibraryInternal): Declare.
	* java/lang/natClassLoader.cc (_Jv_FindClass): Removed dead copy.
	(_Jv_FindClassInCache): Likewise.
	(_Jv_FindClass): Don't conditionalize body on INTERPRETER.
	(findSystemClass): Try to load class from compiled module.
	Include Runtime.h.
	* java/lang/natRuntime.cc (load): Use UTF-8 copy of filename.
	(loadLibrary): Likewise.
	(lt_preloaded_symbols): Define.
	(loadLibraryInternal): New method.
	* include/config.h.in: Rebuilt.
	* acconfig.h (USE_LTDL): Added.
	* Makefile.am (SUBDIRS): Added $(DIRLTDL).
	(INCLUDES): Added $(INCLTDL).
	(libgcj_la_DEPENDENCIES): Added $(LIBLTDL).
	(libgcj_la_LIBADD): Likewise.
	* aclocal.m4, configure: Rebuilt.
	* configure.in: Added libltdl support.

2000-01-15  Tom Tromey  <tromey@cygnus.com>

	* prims.cc (_Jv_PrimClass): Use `JV_STATE_NOTHING', not `0'.

2000-01-14  Andrew Haley  <aph@cygnus.com>

	* java/lang/natThrowable.cc: New file.

	* java/lang/Throwable.java (fillInStackTrace): Make native.
	(printStackTrace): Call native method to do this.
	(Throwable): Call fillInStackTrace.
	(stackTrace): New variable.
	
	* include/jvm.h: Add _Jv_ThisExecutable functions.
	
	* prims.cc: (_Jv_execName): New variable.
	(catch_segv): Call fillInStackTrace.
	(catch_fpe): Ditto.
	(_Jv_ThisExecutable): New functions.
	(JvRunMain): Set the name of this executable.

	* Makefile.am: Add java/lang/natThrowable.cc.
	Add name-finder.cc.
	* Makefile.in: Rebuilt.

	* acconfig.h: Add HAVE_PROC_SELF_EXE.

	* configure.in: Force link with __frame_state_for in
	FORCELIBGCCSPEC.  Add new checks for backtrace.
	* include/config.h.in: Rebuilt.

	* name-finder.cc: New file.
	* include/name-finder.h: New file.

2000-01-16  Anthony Green  <green@cygnus.com>

	* java/lang/StringBuffer.java (StringBuffer): Don't special case
	null argument.

2000-01-16  Jeff Sturm  <jsturm@sigma6.com>

	* java/io/StreamTokenizer.java (nextToken): Avoid unread(TT_EOF).

2000-01-13  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natClassLoader.cc (_Jv_FindClass): Register `loader',
	not system loader, as initiating loader.

2000-01-11  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natSystem.cc (getpwuid_adaptor): New adaptor for
	HP/UX.  From David Scott Urban.

2000-01-10  Jeff Sturm  <jsturm@sigma6.com>

	* java/lang/natMath.cc (pow): Cast args to `double', not
	`jdouble'.
	(atan2): Likewise.
	(IEEEremainder): Likewise.
	* java/lang/mprec.h: Don't wrap includes in `extern "C"'.
	* java/lang/fdlibm.h: Don't wrap includes in `extern "C"'.

2000-01-09  Anthony Green  <green@cygnus.com>

	* java/lang/natString.cc (init): Test for overflow condition
	during out of bounds check.
	(getChars): Throw StringIndexOutOfBoundsException, not
	ArrayIndexOutOfBoundsException.
	(getBytes): Ditto.
	(regionMatches): Obey case option during string comparison.

	* configure.host (ligcj_interpreter): New variable.  Enable
	interpreter by default on IA-32.
	* configure.in:  Examine libgcj_interpreter.
	* configure: Rebuilt.

2000-01-07  Tom Tromey  <tromey@cygnus.com>

	* mauve-libgcj: Don't disable ClassTest.

	* java/lang/natClass.cc (getClasses): Wrote.

2000-01-06  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natClass.cc (_getConstructors): Correctly check
	whether method name is the init name.
	(getMethod): Look at accflags on method in `klass', not `this'.

2000-01-05  Tom Tromey  <tromey@cygnus.com>

	* java/lang/natClass.cc (getMethod): Compute offset relative to
	`klass's methods table, not `this's table.

	* java/lang/reflect/natMethod.cc (_Jv_CallNonvirtualMethodA):
	In unwrapping/widening case, check whether `k' is null, not
	whether it is primitive.  Initialize `num' from `argelts', not
	`paramelts'.  Correct create and pass arguments to ffi_call.
	Don't let presence of `this' argument affect index used to look in
	argument arrays.
	(COPY): Set appropriate element in `values' vector.

	* java/lang/natClass.cc: Include <gcj/method.h>.

	* java/lang/Class.h (_getMethods): Correctly declare as private,
	not public.

	* java/lang/Class.h (_getMethods): Declare.
	* java/lang/Class.java (_getMethods): Declare.
	* java/lang/natClass.cc (getDeclaringClass): Always return NULL.
	(getDeclaredClasses): Always return empty array.
	(_getMethods): New method.
	(getMethods): Wrote.
	(getDeclaredMethod): Return `rmethod'.
	(finit_name): New global.
	(getDeclaredMethods): Check for finit_name.
	(_getMethods): Likewise.
	(getMethod): Only return public methods.

	* java/lang/reflect/natMethod.cc (get_ffi_type): Test size of
	jboolean and select correct ffi type on that basis.
	(_Jv_CallNonvirtualMethodA): Handle `void' return type.
	Constructor call always has `void' return type.

2000-01-04  Tom Tromey  <tromey@cygnus.com>

	* java/lang/Class.h (getSignature): Updated.
	* java/lang/Class.java (getSignature): Updated.
	* java/lang/natClass.cc (getSignature): Added `is_constructor'
	argument.
	(getConstructor): Ensure constructor is public.
	(_getConstructors): Check for public-ness of constructor when
	`declared' is false, not when it is true.

2000-01-04  Warren Levy  <warrenl@cygnus.com>

	* java/net/natPlainDatagramSocketImpl.cc (peek): Removed unnecesary
	comment.
	(receive): Set the sender's address in the DatagramPacket.

2000-01-04  Tom Tromey  <tromey@cygnus.com>

	* java/lang/reflect/natConstructor.cc (newInstance): Pass
	declaring class as return_type argument to
	_Jv_CallNonvirtualMethodA.
	* java/lang/reflect/natMethod.cc (_Jv_CallNonvirtualMethodA): In
	constructor case, create object and use it as `this' argument.
	* java/lang/Class.h (_getConstructors): Declare.
	(_getFields): Declare.
	* java/lang/Class.java (getConstructors): Wrote.
	(_getConstructors): New native method.
	(getDeclaredConstructors): Wrote.
	(_getFields): Declare new native method.
	* java/lang/natClass.cc (_Jv_LookupInterfaceMethod): Removed
	incorrect comment.
	(getMethod): Work correctly when class is primitive.
	(getDeclaredMethods): Likewise.  Compute offset using `method',
	not `mptr'.
	(getDeclaredMethod): Likewise.
	(getConstructor): Wrote.
	(ConstructorClass): New define.
	(getDeclaredConstructor): Wrote.
	(_getConstructors): New method.
	(_getFields): New method.
	(getFields): Wrote.

	* Makefile.in: Rebuilt.
	* Makefile.am (AM_CXXFLAGS): Added -D_GNU_SOURCE.

	* prims.cc: Remove `#pragma implementation'.
	* gcj/array.h: Remove `#pragma interface'.

	* prims.cc (_Jv_equaln): New function.
	* java/lang/Class.java (getSignature): Declare.
	* resolve.cc (_Jv_LookupDeclaredMethod): Moved to natClass.cc.
	* java/lang/natClass.cc (_Jv_LookupDeclaredMethod): Moved from
	resolve.cc.
	(getSignature): New method.
	(getDeclaredMethod): Wrote.
	(getMethod): Wrote.
	Include StringBuffer.h.
	* java/lang/Class.h (Class): Added _Jv_FromReflectedConstructor
	as a friend.  Unconditionally declare _Jv_LookupDeclaredMethod as
	a friend.
	(getSignature): Declare.
	* include/jvm.h (_Jv_GetTypesFromSignature): Declare.
	(_Jv_equaln): Declare.
	(_Jv_CallNonvirtualMethodA): Declare.
	* Makefile.in: Rebuilt.
	* Makefile.am (nat_source_files): Added natConstructor.cc.
	(java/lang/reflect/Constructor.h): New target.
	* java/lang/reflect/natConstructor.cc: New file.
	* java/lang/reflect/Constructor.java (newInstance): Now native.
	(declaringClass): Renamed from decl_class.
	(offset): Renamed from index.
	(getType): New native method.
	(getModifiers): Now native.
	(getParameterTypes): Call getType if required.
	(hashCode): Include hash code from declaring class.
	(modifiers): Removed.
	(toString): Call getType if required.
	* gcj/method.h (_Jv_FromReflectedConstructor): New function.
	* java/lang/reflect/natMethod.cc (hack_call): New method.
	Removed `#if 0' around FFI code.
	Include <gnu/gcj/RawData.h>.
	(invoke): Use _Jv_CallNonvirtualMethodA.  Throw
	IllegalArgumentException when argument object and class disagree.
	(_Jv_GetTypesFromSignature): New function.
	(getType): Use it.
	(ObjectClass): New define.
	(_Jv_CallNonvirtualMethodA): New function.
	* java/lang/reflect/Method.java (hack_trampoline): New method.
	(hack_call): New native method.
